"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeliverableComponent=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_react=require("react"),_reactTooltip=_interopRequireDefault(require("react-tooltip")),_reactI18next=require("react-i18next"),_svgIcon=require("../svg-icon"),_deliverableInput=require("./deliverableInput"),_switch=require("../switch"),_Switch=require("../switch/Switch.interface"),_corLottie=require("../cor-lottie"),_style=require("./style"),_Deliverable=require("./Deliverable.interface"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var KEY_ENTER="Enter",KEY_ESCAPE="Escape",DeliverableComponent=function(a){var b=a.deliverable,c=void 0===b?0:b,d=a.handleUpdateTask,e=void 0===d?function(){}:d,f=a.handleCheckboxStatus,g=void 0===f?function(){}:f,h=a.simpleVersion,i=void 0!==h&&h,j=a.archived,k=a.tooltip,l=void 0!==k&&k,m=a.deliverableStatus,n=a.editable,o=a.iconText,p=a.onStartEditing,q=void 0===p?function(){}:p,r=a.onFinishEditing,s=void 0===r?function(){}:r,u=a.onInputFocus,v=void 0===u?function(){}:u,w=a.onInputBlur,x=void 0===w?function(){}:w,y=a.onCancel,z=void 0===y?function(){}:y,A=a.onInfoIconHover,B=void 0===A?function(){}:A,C=a.onIconHover,D=void 0===C?function(){}:C,E=a.loading,F=a.switchIdentify,G=void 0===F?"":F,H=(0,_reactI18next.useTranslation)("task_panel"),I=H.t,t=(0,_react.useState)(0),J=(0,_slicedToArray2.default)(t,2),K=J[0],L=J[1],M=(0,_react.useState)(!1),N=(0,_slicedToArray2.default)(M,2),O=N[0],P=N[1],Q=(0,_react.useState)(!1),R=(0,_slicedToArray2.default)(Q,2),S=R[0],T=R[1],U=(0,_react.useState)(!1),V=(0,_slicedToArray2.default)(U,2),W=V[0],X=V[1],Y=(0,_react.useRef)(null),Z=(0,_react.useRef)(null),$=(0,_react.useMemo)(function(){return c},[c]);(0,_react.useEffect)(function(){L($)},[c]);var _=function(){K==="".trim()||(L(+K),e({deliverable:+K}),P(!1),X(!1),T(!1),s())},aa=function(){P(!1),X(!1),T(!1),L(+$),s(),z()},ba=(0,_react.useCallback)(function(a){if(a.key===KEY_ENTER&&O){if(K==="".trim())return;a.currentTarget.blur(),K||aa(),_(),s()}else a.key===KEY_ESCAPE&&O&&(a.currentTarget.blur(),aa(),s())},[O,_,K]);(0,_react.useEffect)(function(){window.localStorage.deliverable=JSON.stringify({deliverable:O?"true":""})},[O]);var ca=(0,_react.useCallback)(function(){var a;a=m&&m!==_Deliverable.DeliverableStatus.COUNTER?_Deliverable.DeliverableStatus.COUNTER:_Deliverable.DeliverableStatus.CHILDREN,g(a)},[m]),da=(0,_react.useCallback)(function(){X(!0),v(),_reactTooltip.default.hide()},[]),ea=(0,_react.useCallback)(function(){X(!1),x()},[]),fa=i&&0===c&&n&&!S&&!W&&!O,ga=i&&o&&!O&&!W?{"data-tip":o,"data-for":"tooltip-deliverable-icon",onMouseEnter:D}:{},ha=(0,_react.useCallback)(function(){var a;return n&&i&&(T(!0),0===c&&(L(""),a=setTimeout(function(){var a;null===Z||void 0===Z||null===(a=Z.current)||void 0===a?void 0:a.focus()},50))),function(){a&&clearTimeout(a)}},[n,i,c,Z]),ia=(0,_react.useCallback)(function(){var a=30,b=30;return i&&(a=26,b=20),{width:a,height:b}},[i]);return(0,_jsxRuntime.jsx)(_style.SCDeliverableComponent,{cursorPointer:n&&i&&0===c,sv:i,align:l,onClick:ha,children:(0,_jsxRuntime.jsx)(_style.SCDeliverableComponentWrapper,_objectSpread(_objectSpread({deliverableStatus:m,editable:n,sv:i,collapsed:fa},ga),{},{ref:Y,children:void 0!==E&&E?(0,_jsxRuntime.jsx)(_style.SCLoading,{sv:i,children:(0,_jsxRuntime.jsx)(_corLottie.CORLottie,_objectSpread({},ia()))}):(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[!i&&(0,_jsxRuntime.jsxs)(_style.SCTitleWrapper,{children:[(0,_jsxRuntime.jsx)("div",{children:I("deliverable").toUpperCase()}),(0,_jsxRuntime.jsx)(_style.SCIconInformation,{onMouseEnter:B,"data-tip":o,"data-for":"tooltip-deliverable-icon",children:(0,_jsxRuntime.jsx)(_svgIcon.SvgIcon,{iconName:"information"})})]}),(0,_jsxRuntime.jsxs)(_style.SCDeliverableComponentContentWrapper,{children:[(0,_jsxRuntime.jsxs)(_style.SCInputAndIcon,{children:[(0,_jsxRuntime.jsx)(_style.SCDeliverableComponentIconWrapper,{editable:n,sv:i,archived:void 0!==j&&j,collapsed:fa,children:(0,_jsxRuntime.jsx)(_svgIcon.SvgIcon,{iconName:"hand-holding-box"})}),!l&&!fa&&(0,_jsxRuntime.jsx)(_deliverableInput.DeliverableInput,{onKeyDown:ba,updateValue:function handleInputChange(a){var b=a.target.value;(!b||/^\d+$/.test(b))&&L(b),O||(P(!0),q())},value:K,disabled:!1,autoComplete:!1,handleClickSave:_,handleClickCancel:aa,editing:O,editable:n,sv:i,handleFocus:da,handleBlur:ea,deliverableStatus:m,refInput:Z})]}),(0,_jsxRuntime.jsx)(_style.SCSwitchWrapper,{id:G,children:n&&!i&&!O&&(0,_jsxRuntime.jsx)(_switch.Switch,{name:"status",size:_Switch.SwitchSize.SMALL,onClick:ca,checked:m===_Deliverable.DeliverableStatus.CHILDREN})})]}),(0,_jsxRuntime.jsx)(_reactTooltip.default,{place:"top",effect:"solid",delayShow:200,className:"cor-tooltip",id:"tooltip-deliverable-icon"})]})}))})};exports.DeliverableComponent=DeliverableComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,