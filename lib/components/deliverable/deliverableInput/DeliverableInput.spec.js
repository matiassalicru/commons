"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_DeliverableInput=require("./DeliverableInput"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var setup=function(a){return(0,_react.render)((0,_jsxRuntime.jsx)(_DeliverableInput.DeliverableInput,_objectSpread({},a)))},defaultProps={onKeyDown:function onKeyDown(){},updateValue:function updateValue(){},value:0,disabled:!0,autoComplete:!0,handleClickSave:function handleClickSave(){},handleClickCancel:function handleClickCancel(){},editing:!1,simpleVersion:!1};describe("<DeliverableInput />",function(){test("Should be in the document",function(){var a=setup(defaultProps),b=a.container;expect(b).toBeInTheDocument()}),test("Should test default props for coverage percentage",function(){var a=setup(_objectSpread(_objectSpread({},defaultProps),{},{editing:!0})),b=a.queryByLabelText,c=a.container,d=a.getByTestId,e=b("deliverableInput"),f=d("check"),g=d("times");e&&(_react.fireEvent.keyDown(e,{key:"Enter"}),_react.fireEvent.change(e,{target:{value:10}})),_react.fireEvent.click(f),_react.fireEvent.click(g),expect(c).toBeInTheDocument()})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZXR1cCIsIm1vY2siLCJyZW5kZXIiLCJkZWZhdWx0UHJvcHMiLCJvbktleURvd24iLCJ1cGRhdGVWYWx1ZSIsInZhbHVlIiwiZGlzYWJsZWQiLCJhdXRvQ29tcGxldGUiLCJoYW5kbGVDbGlja1NhdmUiLCJoYW5kbGVDbGlja0NhbmNlbCIsImVkaXRpbmciLCJzaW1wbGVWZXJzaW9uIiwiZGVzY3JpYmUiLCJ0ZXN0IiwiY29udGFpbmVyIiwiZXhwZWN0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJxdWVyeUJ5TGFiZWxUZXh0IiwiZ2V0QnlUZXN0SWQiLCJpbnB1dCIsImNvbmZpcm1CdXR0b24iLCJjYW5jZWxCdXR0b24iLCJmaXJlRXZlbnQiLCJrZXlEb3duIiwia2V5IiwiY2hhbmdlIiwidGFyZ2V0IiwiY2xpY2siXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZWxpdmVyYWJsZS9kZWxpdmVyYWJsZUlucHV0L0RlbGl2ZXJhYmxlSW5wdXQuc3BlYy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHsgRGVsaXZlcmFibGVJbnB1dFByb3BzIH0gZnJvbSAnLi4vRGVsaXZlcmFibGUuaW50ZXJmYWNlJ1xuaW1wb3J0IHsgRGVsaXZlcmFibGVJbnB1dCB9IGZyb20gJy4vRGVsaXZlcmFibGVJbnB1dCdcblxuY29uc3Qgc2V0dXAgPSAobW9jazogRGVsaXZlcmFibGVJbnB1dFByb3BzKSA9PiByZW5kZXIoPERlbGl2ZXJhYmxlSW5wdXQgey4uLm1vY2t9IC8+KVxuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIG9uS2V5RG93bjogKCkgPT4ge1xuICAgIC8vIGRlZmF1bHQgZnVuY3Rpb25cbiAgfSxcbiAgdXBkYXRlVmFsdWU6ICgpID0+IHtcbiAgICAvLyBkZWZhdWx0IGZ1bmN0aW9uXG4gIH0sXG4gIHZhbHVlOiAwLFxuICBkaXNhYmxlZDogdHJ1ZSxcbiAgYXV0b0NvbXBsZXRlOiB0cnVlLFxuICBoYW5kbGVDbGlja1NhdmU6ICgpID0+IHtcbiAgICAvLyBkZWZhdWx0IGZ1bmN0aW9uXG4gIH0sXG4gIGhhbmRsZUNsaWNrQ2FuY2VsOiAoKSA9PiB7XG4gICAgLy8gZGVmYXVsdCBmdW5jdGlvblxuICB9LFxuICBlZGl0aW5nOiBmYWxzZSxcbiAgc2ltcGxlVmVyc2lvbjogZmFsc2UsXG59XG5cbmRlc2NyaWJlKCc8RGVsaXZlcmFibGVJbnB1dCAvPicsICgpID0+IHtcbiAgdGVzdCgnU2hvdWxkIGJlIGluIHRoZSBkb2N1bWVudCcsICgpID0+IHtcbiAgICBjb25zdCB7IGNvbnRhaW5lciB9ID0gc2V0dXAoZGVmYXVsdFByb3BzKVxuXG4gICAgZXhwZWN0KGNvbnRhaW5lcikudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIHRlc3QoJ1Nob3VsZCB0ZXN0IGRlZmF1bHQgcHJvcHMgZm9yIGNvdmVyYWdlIHBlcmNlbnRhZ2UnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBxdWVyeUJ5TGFiZWxUZXh0LCBjb250YWluZXIsIGdldEJ5VGVzdElkIH0gPSBzZXR1cCh7IC4uLmRlZmF1bHRQcm9wcywgZWRpdGluZzogdHJ1ZSB9KVxuICAgIGNvbnN0IGlucHV0ID0gcXVlcnlCeUxhYmVsVGV4dCgnZGVsaXZlcmFibGVJbnB1dCcpXG4gICAgY29uc3QgY29uZmlybUJ1dHRvbiA9IGdldEJ5VGVzdElkKCdjaGVjaycpXG4gICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZ2V0QnlUZXN0SWQoJ3RpbWVzJylcbiAgICBpZiAoaW5wdXQpIHtcbiAgICAgIGZpcmVFdmVudC5rZXlEb3duKGlucHV0LCB7XG4gICAgICAgIGtleTogJ0VudGVyJyxcbiAgICAgIH0pXG4gICAgICBmaXJlRXZlbnQuY2hhbmdlKGlucHV0LCB7XG4gICAgICAgIHRhcmdldDoge1xuICAgICAgICAgIHZhbHVlOiAxMCxcbiAgICAgICAgfSxcbiAgICAgIH0pXG4gICAgfVxuICAgIGZpcmVFdmVudC5jbGljayhjb25maXJtQnV0dG9uKVxuICAgIGZpcmVFdmVudC5jbGljayhjYW5jZWxCdXR0b24pXG5cbiAgICBleHBlY3QoY29udGFpbmVyKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiODZCQUlNQSxNQUFLLENBQUcsU0FBQ0MsQ0FBMkIsUUFBSyxHQUFBQyxhQUFNLEVBQUMsb0JBQUMsa0NBQWdCLGtCQUFLRCxDQUFJLEVBQUksQ0FBQyxFQUUvRUUsWUFBWSxDQUFHLENBQ25CQyxTQUFTLENBQUUsb0JBQU0sQ0FFakIsQ0FBQyxDQUNEQyxXQUFXLENBQUUsc0JBQU0sQ0FFbkIsQ0FBQyxDQUNEQyxLQUFLLENBQUUsQ0FBQyxDQUNSQyxRQUFRLEdBQU0sQ0FDZEMsWUFBWSxHQUFNLENBQ2xCQyxlQUFlLENBQUUsMEJBQU0sQ0FFdkIsQ0FBQyxDQUNEQyxpQkFBaUIsQ0FBRSw0QkFBTSxDQUV6QixDQUFDLENBQ0RDLE9BQU8sR0FBTyxDQUNkQyxhQUFhLEdBQ2YsQ0FBQyxDQUVEQyxRQUFRLENBQUMsc0JBQXNCLENBQUUsVUFBTSxDQUNyQ0MsSUFBSSxDQUFDLDJCQUEyQixDQUFFLFVBQU0sQ0FDdEMsTUFBc0JkLEtBQUssQ0FBQ0csWUFBWSxDQUFDLENBQWpDWSxDQUFTLEdBQVRBLFNBQVMsQ0FFakJDLE1BQU0sQ0FBQ0QsQ0FBUyxDQUFDLENBQUNFLGlCQUFpQixFQUNyQyxDQUFDLENBQUMsQ0FFRkgsSUFBSSxDQUFDLG1EQUFtRCxDQUFFLFVBQU0sT0FDVGQsS0FBSyxnQ0FBTUcsWUFBWSxNQUFFUSxPQUFPLEdBQU0sR0FBRyxDQUF0Rk8sQ0FBZ0IsR0FBaEJBLGdCQUFnQixDQUFFSCxDQUFTLEdBQVRBLFNBQVMsQ0FBRUksQ0FBVyxHQUFYQSxXQUFXLENBQzFDQyxDQUFLLENBQUdGLENBQWdCLENBQUMsa0JBQWtCLENBQUMsQ0FDNUNHLENBQWEsQ0FBR0YsQ0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUNwQ0csQ0FBWSxDQUFHSCxDQUFXLENBQUMsT0FBTyxDQUFDLENBQ3JDQyxDQUFLLEdBQ1BHLGdCQUFTLENBQUNDLE9BQU8sQ0FBQ0osQ0FBSyxDQUFFLENBQ3ZCSyxHQUFHLENBQUUsT0FDUCxDQUFDLENBQUMsQ0FDRkYsZ0JBQVMsQ0FBQ0csTUFBTSxDQUFDTixDQUFLLENBQUUsQ0FDdEJPLE1BQU0sQ0FBRSxDQUNOckIsS0FBSyxDQUFFLEVBQ1QsQ0FDRixDQUFDLENBQUMsRUFFSmlCLGdCQUFTLENBQUNLLEtBQUssQ0FBQ1AsQ0FBYSxDQUFDLENBQzlCRSxnQkFBUyxDQUFDSyxLQUFLLENBQUNOLENBQVksQ0FBQyxDQUU3Qk4sTUFBTSxDQUFDRCxDQUFTLENBQUMsQ0FBQ0UsaUJBQWlCLEVBQ3JDLENBQUMsQ0FDSCxDQUFDLENBQUMifQ==