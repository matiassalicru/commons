"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_TaskRowSkeleton=require("./TaskRowSkeleton"),_constants=require("./utils/constants"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var mockProps={quantity:1,hasCheckBox:!0,isLargeTask:!0,columns:_constants.defaultColumns},setup=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:mockProps;return(0,_react.render)((0,_jsxRuntime.jsx)(_TaskRowSkeleton.TaskRowSkeleton,_objectSpread({},a)))};describe("<TaskSkeleton />",function(){test("Should show all the columns",function(){var a=setup(),b=a.getByTestId;_constants.defaultColumns.forEach(function(a){var c=b("".concat(a,"-skeleton"));expect(c).toBeInTheDocument()})}),test("Should not show the checkbox column",function(){var a=setup(_objectSpread(_objectSpread({},mockProps),{},{hasCheckBox:!1})),b=a.queryByTestId,c=b("check-skeleton");expect(c).toBeNull()}),test("Should not show the title column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.TITLE_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("title-skeleton");expect(d).toBeNull()}),test("Should not show the messages column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.MESSAGES_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("messages-skeleton");expect(d).toBeNull()}),test("Should not show the priority column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.PRIORITY_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("priority-skeleton");expect(d).toBeNull()}),test("Should not show the deadline column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.DEADLINE_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("deadline-skeleton");expect(d).toBeNull()}),test("Should not show the progress column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.PROGRESS_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("progress-skeleton");expect(d).toBeNull()}),test("Should not show the pm column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.PM_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("pm-skeleton");expect(d).toBeNull()}),test("Should not show the collaborator column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.COLLABORATOR_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("collaborator-skeleton");expect(d).toBeNull()}),test("Should not show the actions column",function(){var a=_constants.defaultColumns.filter(function(a){return a!==_constants.ACTIONS_COLUMN}),b=setup(_objectSpread(_objectSpread({},mockProps),{},{columns:a})),c=b.queryByTestId,d=c("actions-skeleton");expect(d).toBeNull()})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,