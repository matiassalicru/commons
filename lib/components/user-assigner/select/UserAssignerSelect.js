"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserAssignerSelect=UserAssignerSelect;var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof")),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_propTypes=_interopRequireDefault(require("prop-types")),_react=_interopRequireWildcard(require("react")),_moment=_interopRequireDefault(require("moment")),_reactDom=_interopRequireDefault(require("react-dom")),_style=require("./style"),_useArrowCounter=require("../../../hooks/use-arrow-counter"),_EmptyResponse=require("../empty-response/EmptyResponse"),_AvatarDeleteable=require("../avatar/AvatarDeleteable"),_UserAssignerMoreUsers=require("../more-users/UserAssignerMoreUsers"),_UserAssignerSelectItem=require("./UserAssignerSelectItem"),_roleClientModal=require("../modals/role-client-modal"),_collaboratorMessage=require("../modals/collaborator-message"),_constants=require("../constants"),_useNearScreen2=require("../../../hooks/useNearScreen"),_useLocalStorage3=require("../../../hooks/use-local-storage"),_svgIcon=require("../../svg-icon"),_userCapacity=require("../../user-capacity"),_alertPortal=require("../../alert-portal"),_modalPortal=require("../../modal-portal"),_utils=require("../utils"),_dispatchAmplitude=_interopRequireDefault(require("../../../utils/dispatchAmplitude")),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!==(0,_typeof2.default)(a)&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}var ModalLicenses=_react.default.lazy(function(){return Promise.resolve().then(function(){return _interopRequireWildcard(require("../../user-leave-modal"))}).then(function(a){return{default:a.UserLeaveModal}})}),MAX_USERS_AVATAR=5,TOOLTIP_HEIGHT=290,CLIENT_ROLE_ID=6,MODAL_TYPE_ROLE1=1,MODAL_TYPE_ROLE2=2,MODAL_TYPE_LICENSE=3,USER_SELECTED=null;function UserAssignerSelect(a){var b,c=a.type,d=a.selected,e=a.closeInteraction,f=a.deleteItem,g=a.dontSaveOnEntity,h=a.onSelect,i=a.handleOnConfirm,j=void 0===i?function(){}:i,k=a.coordinates,l=k.x,m=void 0===l?0:l,n=k.y,o=void 0===n?0:n,p=a.offsetY,q=a.offsetX,r=a.onlyView,s=void 0!==r&&r,t=a.maxAssignments,u=void 0===t?null:t,v=a.projectId,w=a.membersProject,x=a.addUserAsFollower,y=void 0===x?function(){}:x,z=a.showConfirmButton,A=a.transformOnHeader,B=a.translations,C=a.fetchUsers,D=a.users,E=a.loadingUsers,F=a.fetchPermissions,G=void 0===F?function(){}:F,H=a.userPermission,I=void 0===H?{}:H,J=a.onSelectUser,K=void 0===J?function(){}:J,L=a.mutationLoading,M=void 0!==L&&L,N=a.contentId,O=a.modalContentId,P=a.showButtonCreate,Q=a.clickButtonCreate,R=void 0===Q?function(){}:Q,S=a.distribution,T=a.showRoleClient,U=a.loggedUser,V=a.showTootltipInUser,W=!(void 0!==V)||V,X=a.isDynamicViewport,Y=void 0!==X&&X,Z=a.disableTopOffset,$=(0,_react.useState)({show:!1,message:"",icon:"check",variant:"success"}),_=(0,_slicedToArray2.default)($,2),aa=_[0],ba=_[1],ca=(0,_react.useRef)(null),da=(0,_react.useRef)(null),ea=(0,_react.useState)(""),fa=(0,_slicedToArray2.default)(ea,2),ga=fa[0],ha=fa[1],ia=(0,_useNearScreen2.useNearScreen)({once:!1}),ja=ia.isNearScreen,ka=ia.fromRef,la=(0,_react.useState)(1),ma=(0,_slicedToArray2.default)(la,2),na=ma[0],oa=ma[1],pa=(0,_react.useState)(1),qa=(0,_slicedToArray2.default)(pa,2),ra=qa[0],sa=qa[1],ta=(0,_react.useState)([]),ua=(0,_slicedToArray2.default)(ta,2),va=ua[0],wa=ua[1],xa=(0,_react.useState)({open:!1,user:null,modalType:null}),ya=(0,_slicedToArray2.default)(xa,2),za=ya[0],Aa=ya[1],Ba=(0,_react.useState)({show:!1,type:0,user:null}),Ca=(0,_slicedToArray2.default)(Ba,2),Da=Ca[0],Ea=Ca[1],Fa=(0,_react.useState)(!1),Ga=(0,_slicedToArray2.default)(Fa,2),Ha=Ga[0],Ia=Ga[1],Ja=(0,_react.useState)(!1),Ka=(0,_slicedToArray2.default)(Ja,2),La=Ka[0],Ma=Ka[1],Na=(0,_react.useState)(!1),Oa=(0,_slicedToArray2.default)(Na,2),Pa=Oa[0],Qa=Oa[1],Ra=(0,_useLocalStorage3.useLocalStorage)("checkboxModalUserLicenses",!0),Sa=(0,_slicedToArray2.default)(Ra,2),Ta=Sa[0],Ua=Sa[1],Va=[];Array.isArray(d)?Va=d:d&&(Va=[d]);var Wa=(0,_utils.sliceArraMaxElements)(Va,s?Va.length:MAX_USERS_AVATAR),Xa=Wa.array,Ya=Wa.rest,Za=Va.length,$a=(0,_react.useCallback)(function(a){wa([]),oa(1),ha(a.target.value)},[]),_a=B.headerType||"";(0,_react.useEffect)(function(){ca.current&&ca.current.focus()},[]),(0,_react.useEffect)(function(){C({variables:{page:na,filters:JSON.stringify({name:ga})}})},[C]),(0,_react.useEffect)(function(){!E&&ja&&na+1<=ra&&C({variables:{page:na+1,filters:JSON.stringify({name:ga})}})},[ja,E]),(0,_react.useEffect)(function(){C({variables:{page:1,filters:JSON.stringify({name:ga})}})},[ga]),(0,_react.useEffect)(function(){if(null!==D&&void 0!==D&&D.users){var a=D.users,b=a.data,c=a.lastPage,d=a.page;oa(+d),sa(+c),wa([].concat((0,_toConsumableArray2.default)(va),(0,_toConsumableArray2.default)(b)))}},[D]),(0,_react.useEffect)(function(){if(USER_SELECTED&&I){var a,b;null!==(a=I.checkTaskAccessType)&&void 0!==a&&a.status?Aa({open:!0,user:USER_SELECTED,modalType:MODAL_TYPE_ROLE1}):!1===(null===(b=I.checkTaskAccessType)||void 0===b?void 0:b.status)&&Aa({open:!0,user:USER_SELECTED,modalType:MODAL_TYPE_ROLE2}),USER_SELECTED=null}},[I,USER_SELECTED]);var ab=(0,_react.useMemo)(function(){return za.modalType===MODAL_TYPE_LICENSE},[za]),bb=function(){ab&&(0,_dispatchAmplitude.default)("MODAL_LEAVES_CLICK_BUTTON_CANCEL",U.company_id,{section:"collapsible_tasks"}),Aa({open:!1,user:null,modalType:null})},cb=function(){return Aa({open:!1,user:null,modalType:null}),ab?(localStorage.setItem("checkboxModalUserLicenses",JSON.stringify(!Pa)),gb(za.user),void(0,_dispatchAmplitude.default)("MODAL_LEAVES_CLICK_BUTTON_CONFIRM",U.company_id,{section:"collapsible_tasks"})):void(Ha?y&&y(za.user,_constants.UserAssignerUserType.FOLLOWER):gb(za.user))},db=(0,_react.useCallback)(function(a){return w.some(function(b){return+b.id===a})},[w]),eb=function(a){G({variables:{userId:a.id}})};(0,_react.useEffect)(function(){var a="true"===localStorage.getItem("showMessageModal");La&&!a&&localStorage.setItem("showMessageModal",La),a&&Ma(a)},[La]);var fb=(0,_react.useCallback)(function(a){switch(Da.type){case 0:gb(Da.user),Ma(a),Ea({show:!1,type:0,user:Da.user});break;case 1:jb(Da.user),Ea({show:!1,type:1,user:Da.user});}},[Da.user]),gb=function(a){if(!M){var b;h&&(b=Array.isArray(d)?[].concat((0,_toConsumableArray2.default)(d),[a]):[d,a],h(b)),!g&&(ha(function(a){return 0<a.length?(wa([]),ca.current&&ca.current.focus(),""):a}),K(b))}},hb=(0,_react.useCallback)(function(a){var b;if(!M){if(u&&Array.isArray(d)&&d.length>=u){var e,f=(null===(e=B.maxAssignments)||void 0===e?void 0:e.replace("{{max}}",u))||"";return f=f.replace("{{type}}",B.titleMarker),void ba({show:!0,message:f,variant:"danger",icon:"times"})}return v&&(c===_constants.UserAssignerUserType.COLLABORATOR||c===_constants.UserAssignerUserType.PM)&&d&&+a.roleId===CLIENT_ROLE_ID&&!db(a.id)?(USER_SELECTED=a,void eb(a)):c===_constants.UserAssignerUserType.COLLABORATOR&&S&&!La?void Ea({show:!0,type:0,user:a}):d&&null!==(b=a.leaves)&&void 0!==b&&b.length&&!1!==Ta?void Aa({open:!0,user:a,modalType:MODAL_TYPE_LICENSE}):void gb(a)}},[d,null===d||void 0===d?void 0:d.length,gb,Aa,ca,M,Ea,La]),ib=(0,_react.useCallback)(function(){ba({show:!1,message:""})},[ba]),jb=function(a){M||setTimeout(function(){var b=d.filter(function(b){var c=b.id;return+c!=+a.id});h&&h(b);!g&&K(b)},0)},kb=va.filter(function(a){var b;return b=Array.isArray(d)?d.find(function(b){return+b.id===a.id}):+(null===d||void 0===d?void 0:d.id)===+a.id,!b}),lb=(0,_react.useCallback)(function(a){null!==kb&&void 0!==kb&&kb.length&&hb(kb[a])},[kb]),mb=(0,_useArrowCounter.useArrowCounter)({dataMax:kb.length,onConfirm:lb,onExit:e,ignoreNext:E,resetCounter:!0}),nb=(0,_react.useCallback)(function(a){return M?void 0:c===_constants.UserAssignerUserType.COLLABORATOR&&S?void Ea({show:!0,type:1,user:a}):void jb(a)},[d,M,Ea]),ob=(0,_react.useMemo)(function(){return s?_react.default.Fragment:_AvatarDeleteable.AvatarDeleteable},[]),pb=(0,_react.useCallback)(function(a){Ia(a.target.checked)},[]),qb=(0,_react.useCallback)(function(){return ab?B.titleModalLicense:B.titleModalRoleClient||""},[za]),rb=function(){if(ab&&za.user.leaves.length){var a=za.user.leaves[0],b=(0,_moment.default)(a.start,_moment.default.ISO_8601).utc().local().format(B.leaveDateFormat),c=(0,_moment.default)(a.end,_moment.default.ISO_8601).utc().local().format(B.leaveDateFormat),d=B.textModalLicense.replace("INIT",b);return"".concat(za.user.firstName," ").concat(za.user.lastName," ").concat(d.replace("END",c))}return""},sb=(0,_react.useCallback)(function(a){var b=a.roleId,c=a.firstName,d=a.lastName,e=a.remainingHours;return 6==+b&&T?"".concat(c," ").concat(d," ").concat(B.tooltipRoleClient||""):"".concat(e," ").concat(B.tooltipAvailableCapacity||""," ").concat(c," ").concat(d)},[]),tb=(0,_react.useMemo)(function(){var a,b=(null===(a=B.headerTitle)||void 0===a?void 0:a.replace("{{number}}",Za))||"";return b=b.replace("{{type}}",_a),b},[Za,_a]);return za.open?(0,_jsxRuntime.jsx)(_react.Suspense,{fallback:(0,_jsxRuntime.jsx)("div",{}),children:ab?(0,_jsxRuntime.jsx)(ModalLicenses,{title:qb(),textContent:rb(),clickButtonCancel:bb,clickButtonAccept:cb,titleAccept:B.accept,titleCancel:B.cancel,checkValue:Pa,handleChangeCheck:function handleChangeCheck(){Qa(function(a){return!a})},labelCheckbox:B.labelCheckboxLicenses}):(0,_jsxRuntime.jsx)(_modalPortal.ModalPortal,{elementId:O,closeModal:bb,clickButtonCancel:bb,clickButtonAccept:cb,title:qb(),translations:B,variant:ab?"normal":"danger",textContent:rb(),children:(0,_jsxRuntime.jsx)(_roleClientModal.RoleClientModal,{translations:B,type:za.modalType,checkModal:Ha,handleCheckboxModal:pb})})}):_reactDom.default.createPortal((0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_style.SCUserAssignerSelectWrapper,{left:m,top:o,offsetY:p,offsetX:q,initial:{opacity:0,scale:.95},animate:{opacity:1,scale:1,transition:{duration:.2}},height:s?null===da||void 0===da||null===(b=da.current)||void 0===b?void 0:b.offsetHeight:TOOLTIP_HEIGHT,isDynamicViewport:Y,disableTopOffset:void 0!==Z&&Z,children:[(0,_jsxRuntime.jsxs)(_style.SCUserAssignerSelectHeader,{ref:da,onlyView:s,transformOnHeader:!(void 0!==A)||A,children:[tb,!!Xa.length&&(0,_jsxRuntime.jsx)(_style.SCAvatarHeaderWrapper,{children:(0,_jsxRuntime.jsx)(_style.SCAvatarsHeader,{children:(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[Xa.map(function(a){return f?(0,_jsxRuntime.jsx)(ob,{onDelete:function onDelete(){return nb(a)},children:(0,_jsxRuntime.jsx)(_userCapacity.UserCapacity,{picture:a.picture,remainingHours:a.remainingHours,size:"small",firstName:a.firstName,lastName:a.lastName,showTootltip:!0,wordingTooltip:sb(a),fromComponent:"user-assigner-select-".concat(a.id),place:"top",roleId:T?+a.roleId:null})},"user-header-".concat(a.id)):(0,_jsxRuntime.jsx)(_userCapacity.UserCapacity,{showTootltip:!0,wordingTooltip:sb(a),picture:a.picture,remainingHours:a.remainingHours,size:"small",firstName:a.firstName,lastName:a.lastName,fromComponent:"user-assigner-select-".concat(a.id),place:"top",roleId:T?+a.roleId:null},"user-header-no-deleteable-".concat(a.id))}),!!Ya.length&&(0,_jsxRuntime.jsx)(_UserAssignerMoreUsers.UserAssignerMoreUsers,{users:Ya,handleDelete:jb,translations:B,showRoleClient:T})]})})})]}),!s&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_style.SCSearchWrapper,{children:[(0,_jsxRuntime.jsx)(_style.SCSearch,{value:ga,onChange:$a,placeholder:B.searchInputPlaceholder||"",ref:ca,"data-robot-id":"user-assigner-select-input"}),(0,_jsxRuntime.jsx)(_style.SCSearchIcon,{children:(0,_jsxRuntime.jsx)(_svgIcon.SvgIcon,{iconName:"search"})})]}),kb&&(0,_jsxRuntime.jsxs)(_style.SCUserAssignerSelectResults,{children:[!!kb.length&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[U&&!ga&&!Va.some(function(a){return+a.id==+U.id})&&(0,_jsxRuntime.jsx)(_UserAssignerSelectItem.UserAssignerSelectItem,{user:_objectSpread(_objectSpread({},U),{},{__typename:"User"}),translations:B,onSelect:hb,showRoleClient:T,showMe:!0,showTootltipInUser:W},"user-item-list-".concat(U.id)),kb.map(function(a,b){return(!U||ga||U.id!==a.id)&&(0,_jsxRuntime.jsx)(_UserAssignerSelectItem.UserAssignerSelectItem,{translations:B,onSelect:hb,user:a,showRoleClient:T,isSelected:b===mb,showTootltipInUser:W,disableScroll:Y},"user-item-list-".concat(a.id))})]}),!E&&!kb.length&&""!==ga&&(0,_jsxRuntime.jsx)(_EmptyResponse.EmptyResult,{translations:B}),(0,_jsxRuntime.jsx)("div",{ref:ka})]}),void 0!==P&&P&&(0,_jsxRuntime.jsx)(_style.SCButtonCreate,{onClick:R,children:B.buttonCreate})]}),void 0!==z&&z&&(0,_jsxRuntime.jsx)(_style.SCConfirmButton,{disabled:!d.length,onClick:function onClick(){!d.length||j(d)},children:B.confirm||""})]}),aa.show&&(0,_jsxRuntime.jsx)(_alertPortal.AlertPortal,{position:"center-bottom",text:aa.message,onClose:ib,variant:aa.variant,icon:aa.icon}),Da.show&&(0,_jsxRuntime.jsx)(_react.Suspense,{fallback:(0,_jsxRuntime.jsx)("div",{}),children:(0,_jsxRuntime.jsx)(_collaboratorMessage.ModalCollaboratorMessage,{typeMenssage:Da.type,onContinue:fb,onCancel:function handleCloseMessageModalPrompt(){Ea({show:!1,type:0,user:null})},translations:B,contentId:O})})]}),document.querySelector(N))}UserAssignerSelect.propTypes={type:_propTypes.default.oneOf(Object.keys(_constants.UserAssignerUserType).map(function(a){return _constants.UserAssignerUserType[a]})),selected:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object]),closeInteraction:_propTypes.default.func.isRequired,deleteItem:_propTypes.default.bool.isRequired,coordinates:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}).isRequired,dontSaveOnEntity:_propTypes.default.bool,onSelect:_propTypes.default.func,handleOnConfirm:_propTypes.default.func,onlyView:_propTypes.default.bool,maxAssignments:_propTypes.default.number,projectId:_propTypes.default.number,membersProject:_propTypes.default.array,showConfirmButton:_propTypes.default.bool,transformOnHeader:_propTypes.default.bool,offsetY:_propTypes.default.number,offsetX:_propTypes.default.number,translations:_propTypes.default.object.isRequired,fetchUsers:_propTypes.default.func.isRequired,users:_propTypes.default.object.isRequired,loadingUsers:_propTypes.default.bool.isRequired,fetchPermissions:_propTypes.default.func,userPermission:_propTypes.default.object,onSelectUser:_propTypes.default.func,mutationLoading:_propTypes.default.bool,showButtonCreate:_propTypes.default.bool,clickButtonCreate:_propTypes.default.func,distribution:_propTypes.default.bool,showRoleClient:_propTypes.default.bool,loggedUser:_propTypes.default.object,showTootltipInUser:_propTypes.default.bool,isDynamicViewport:_propTypes.default.bool};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,