"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_InputHour=require("./InputHour"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var componentProps={chargeEnabled:!1,estimateEnabled:!1,enableEstimateButton:!1,eventLog:{suggestedEdit:function suggestedEdit(){return null}},enabledDay:!0,enableEditHour:!0,enableDeleteHour:!0,sgEnableEditHour:!0,sgEnableDeleteHour:!0},TestComponent=function(a){return(0,_jsxRuntime.jsx)(_InputHour.InputHour,_objectSpread(_objectSpread({},componentProps),a))};describe("<InputHour />",function(){describe("ChargeHour mode charged",function(){test("Should return true if hover in/out wrapper charged",function(){var a=jest.fn(),b=jest.fn();(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{chargeEnabled:!0,onlySuggestion:!1})));var c=_react.screen.getByTestId("InfoContainerHovercharged");c.onmouseover=a,_react.fireEvent.mouseOver(c),expect(a).toHaveBeenCalled(),c.onmouseleave=b,_react.fireEvent.mouseLeave(c),expect(b).toHaveBeenCalled()}),test("Should appear the edition button when hovering on it charged",function(){var a=jest.fn();(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{estimateEnabled:!0})));var b=_react.screen.getByTestId("InfoContainerHovercharged");b.onmouseover=a(),_react.fireEvent.mouseOver(b);var c=_react.screen.getByTestId("IconEditButtom");expect(c).toBeInTheDocument()}),test("Should call the edit function when click it the charge hour button",function(){var a=jest.fn(),b={estimateEnabled:!0,onStartEdition:a()};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(d),expect(a).toHaveBeenCalled()}),test("Should appear button accept and cancel when i click it the button for charged hours",function(){var a=jest.fn(),b={estimateEnabled:!0,onStartEdition:a()};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(d),expect(a).toHaveBeenCalled();var e=_react.screen.getByTestId("IconAcceptButtom");expect(e).toBeInTheDocument();var f=_react.screen.getByTestId("IconCancelButtom");expect(f).toBeInTheDocument()}),test("Should appear button accept and cancel when i click it the button for charged hours",function(){var a=jest.fn(),b={onStartEdition:a(),estimateEnabled:!0};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(d),expect(a).toHaveBeenCalled();var e=_react.screen.getByTestId("IconAcceptButtom");expect(e).toBeInTheDocument();var f=_react.screen.getByTestId("IconCancelButtom");expect(f).toBeInTheDocument()}),test("Should call the accep function when i click it the button for accept charged hours",function(){var a=jest.fn(),b=jest.fn(),c={onStartEdition:a(),handleClickCheckHour:b({hour:1,minutes:0}),estimateEnabled:!0,hourLoad:1};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},c)));var d=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.mouseOver(d);var e=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(e),expect(a).toHaveBeenCalled();var f=_react.screen.getByTestId("IconAcceptButtom");_react.fireEvent.click(f),expect(b).toHaveBeenCalled(),expect(b).toHaveBeenCalledWith({hour:1,minutes:0})}),test("Should call the cancel function when i click it the button for cancel charged hours",function(){var a=jest.fn(),b={onCloseEdition:a(),estimateEnabled:!0,hourLoad:6};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(d);var e=_react.screen.getByTestId("IconCancelButtom");_react.fireEvent.click(e),expect(a).toHaveBeenCalled()}),test("Should call the cancel function when i click it the button for cancel charged hours",function(){var a=jest.fn(),b=jest.fn(),c={onStartEdition:a(),onCloseEdition:b(),estimateEnabled:!1,sgEnable:!0,sgHourLoad:1};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},c)));var d=_react.screen.getByTestId("InfoContainerHoversuggested");_react.fireEvent.mouseOver(d);var e=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(e);var f=_react.screen.getByTestId("IconCancelButtom");_react.fireEvent.click(f),expect(b).toHaveBeenCalled()})}),describe("ChargeHour mode suggested",function(){test("Should return true if hover in/out wrapper suggested",function(){var a=jest.fn(),b=jest.fn();(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{sgEnable:!0,sgHourLoad:1})));var c=_react.screen.getByTestId("InfoContainerHoversuggested");c.onmouseover=a,_react.fireEvent.mouseOver(c),expect(a).toHaveBeenCalled(),c.onmouseleave=b,_react.fireEvent.mouseLeave(c),expect(b).toHaveBeenCalled()}),test("Should appear the edition and delete button when hovering on it suggested",function(){var a=jest.fn();(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{sgEnable:!0,sgHourLoad:1})));var b=_react.screen.getByTestId("InfoContainerHoversuggested");b.onmouseover=a(),_react.fireEvent.mouseOver(b);var c=_react.screen.getByTestId("IconEditButtom");expect(c).toBeInTheDocument();var d=_react.screen.getByTestId("IconDeleteButtom");expect(d).toBeInTheDocument()}),test("Should call the edit function when click it the suggestion hour button",function(){var a=jest.fn(),b={onStartEdition:a(),estimateEnabled:!1,chargeEnabled:!1,onlySuggestion:!0,sgEnable:!0,sgHourLoad:1};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHoversuggested");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(d),expect(a).toHaveBeenCalled()}),test("Should appear button accept and cancel when i click it the button for suggested hours",function(){var a=jest.fn(),b={onStartEdition:a(),estimateEnabled:!0,sgEnable:!0,sgHourLoad:1};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHoversuggested");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(d),expect(a).toHaveBeenCalled();var e=_react.screen.getByTestId("IconAcceptButtom");expect(e).toBeInTheDocument();var f=_react.screen.getByTestId("IconCancelButtom");expect(f).toBeInTheDocument()}),test("Should call the accep function when i click it the button for accept suggestion hours",function(){var a=jest.fn(),b=jest.fn(),c={onStartEdition:a(),sgHandleClickCheckHour:b(),estimateEnabled:!0,sgEnable:!0,sgHourLoad:1};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},c)));var d=_react.screen.getByTestId("InfoContainerHoversuggested");_react.fireEvent.mouseOver(d);var e=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(e),expect(a).toHaveBeenCalled();var f=_react.screen.getByTestId("IconAcceptButtom");_react.fireEvent.click(f),expect(b).toHaveBeenCalled()})}),describe("Suggestion Button",function(){test("Should call the edit function when click it the suggestion hour button",function(){var a=jest.fn();(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{onStartEdition:a,estimateEnabled:!0,sgEnable:!0,sgHourLoad:1})));var b=_react.screen.getByTestId("InfoContainerHoversuggested");_react.fireEvent.mouseOver(b);var c=_react.screen.getByTestId("IconEditButtom");_react.fireEvent.click(c),expect(a).toHaveBeenCalled()}),test("Should call the delete function when click it the suggestion hour button delete",function(){var a=jest.fn(),b={sgHandleDeleteHour:a(),estimateEnabled:!0,sgEnable:!0,sgHourLoad:1};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHoversuggested");_react.fireEvent.mouseOver(c);var d=_react.screen.getByTestId("IconDeleteButtom");_react.fireEvent.click(d),expect(a).toHaveBeenCalled()}),test("Should appear Suggestion Button with icon cor",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{enableEstimateButton:!0,estimateEnabled:!0})));var a=_react.screen.getByTestId("SuggestionButtonWrapper");expect(a).toBeInTheDocument()}),test("Should Suggestion Button with icon color white",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{enableEstimateButton:!0,estimateEnabled:!0})));var a=_react.screen.getByTestId("SCSuggestionButton");expect(a).toHaveStyle("background-color: #fff;")}),test("Should Suggestion Button with icon color black",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{enableEstimateButton:!0,estimateEnabled:!0,iconColor:"black"})));var a=_react.screen.getByTestId("SCSuggestionButton");expect(a).toHaveStyle("background-color: #000;")}),test("Should Suggestion Button with icon logo color gray",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{enableEstimateButton:!0,estimateEnabled:!0,grayLogo:!0})));var a=_react.screen.getByTestId("SCSuggestionButton");expect(a).toHaveStyle("filter: grayscale(40);")}),test("Should Suggestion Button with icon logo color yellow",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{enableEstimateButton:!0,estimateEnabled:!0,grayLogo:!1})));var a=_react.screen.getByTestId("SCSuggestionButton");expect(a).not.toHaveStyle("filter: grayscale(40);")}),test("The button should be displayed on the center",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{enableEstimateButton:!0,estimateEnabled:!0})));var a=_react.screen.getByTestId("SuggestionButtonWrapper");expect(a).toHaveStyle("\n        left: 0px;\n        z-index: 20;\n      ")}),test("Should call the edit function when click it the charge hour input and the variant is false",function(){var a=jest.fn(),b={estimateEnabled:!0,variant:!1,onStartEdition:a()};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.click(c);var d=_react.screen.getByTestId("IconAcceptButtom"),e=_react.screen.getByTestId("IconCancelButtom");expect(a).toHaveBeenCalled(),expect(d).toBeInTheDocument(),expect(e).toBeInTheDocument()}),test("should not call the edit function when you click on the estimate and the variant is true",function(){var a=jest.fn();(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{estimateEnabled:!0,variant:!0,onStartEdition:a})));var b=_react.screen.getByTestId("InfoContainerHovercharged");_react.fireEvent.click(b),expect(a).not.toHaveBeenCalled()})}),describe("Comments icon",function(){test("should show comment icon",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{estimateEnabled:!1,enabledComments:!0,showCommentsIcon:!0})));var a=_react.screen.getByTestId("icon-comments");expect(a).toBeInTheDocument()}),test("should call click event when clicking on icon comment",function(){var a=jest.fn(),b={estimateEnabled:!1,enabledComments:!0,onClickActionComments:a(),showCommentsIcon:!0};(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},b)));var c=_react.screen.getByTestId("icon-comments");_react.fireEvent.click(c),expect(a).toHaveBeenCalled(),expect(a).toHaveBeenCalledTimes(1)}),test("Should show ellipsis when there are more that forty caracters",function(){(0,_react.render)((0,_jsxRuntime.jsx)(TestComponent,_objectSpread({},{estimateEnabled:!1,enabledComments:!0,tooltipButtonComments:"test",showCommentsIcon:!0})))})})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,