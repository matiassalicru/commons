"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_index=require("./index"),_bulkActions=require("../../mocks/bulkActions"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var setup=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return(0,_react.render)((0,_jsxRuntime.jsx)(_index.BulkActions,_objectSpread({trackEvent:function trackEvent(){return!0},bulkActions:_bulkActions.bulkActions,handleCloseWidget:function handleCloseWidget(){return!0},getQueryFilter:_bulkActions.getQueryFilter},a)))};describe("<BulkActions />",function(){test("should track event when widget is closed ",function(){var a=jest.fn(),b=setup({trackEvent:a}),c=b.getByTestId,d=c("close-widget-button");_react.fireEvent.click(d),expect(a).toHaveBeenCalled()}),test("should call handleCloseWidget when widget is closed",function(){var a=jest.fn(),b=setup({handleCloseWidget:a}),c=b.getByTestId,d=c("close-widget-button");_react.fireEvent.click(d),expect(a).toHaveBeenCalled()})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZXR1cCIsIm1vY2siLCJyZW5kZXIiLCJidWxrQWN0aW9ucyIsImdldFF1ZXJ5RmlsdGVyIiwiZGVzY3JpYmUiLCJ0ZXN0IiwidHJhY2tFdmVudE1vY2siLCJqZXN0IiwiZm4iLCJ0cmFja0V2ZW50IiwiZ2V0QnlUZXN0SWQiLCJjbG9zZUJ1dHRvbiIsImZpcmVFdmVudCIsImNsaWNrIiwiZXhwZWN0IiwidG9IYXZlQmVlbkNhbGxlZCIsImhhbmRsZUNsb3NlV2lkZ2V0TW9jayIsImhhbmRsZUNsb3NlV2lkZ2V0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvYnVsay1hY3Rpb25zL0J1bGtBY3Rpb25zLnNwZWMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCB7IEJ1bGtBY3Rpb25zIH0gZnJvbSAnLi9pbmRleCdcbi8vIE1vY2tcbmltcG9ydCB7IGJ1bGtBY3Rpb25zLCBnZXRRdWVyeUZpbHRlciB9IGZyb20gJy4uLy4uL21vY2tzL2J1bGtBY3Rpb25zJ1xuXG5jb25zdCBzZXR1cCA9IChtb2NrID0ge30pID0+XG4gIHJlbmRlcihcbiAgICA8QnVsa0FjdGlvbnNcbiAgICAgIHRyYWNrRXZlbnQ9eygpID0+IHRydWV9XG4gICAgICBidWxrQWN0aW9ucz17YnVsa0FjdGlvbnN9XG4gICAgICBoYW5kbGVDbG9zZVdpZGdldD17KCkgPT4gdHJ1ZX1cbiAgICAgIGdldFF1ZXJ5RmlsdGVyPXtnZXRRdWVyeUZpbHRlcn1cbiAgICAgIHsuLi5tb2NrfVxuICAgIC8+XG4gIClcbmRlc2NyaWJlKCc8QnVsa0FjdGlvbnMgLz4nLCAoKSA9PiB7XG4gIHRlc3QoJ3Nob3VsZCB0cmFjayBldmVudCB3aGVuIHdpZGdldCBpcyBjbG9zZWQgJywgKCkgPT4ge1xuICAgIGNvbnN0IHRyYWNrRXZlbnRNb2NrID0gamVzdC5mbigpXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gc2V0dXAoe1xuICAgICAgdHJhY2tFdmVudDogdHJhY2tFdmVudE1vY2ssXG4gICAgfSlcblxuICAgIGNvbnN0IGNsb3NlQnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2Nsb3NlLXdpZGdldC1idXR0b24nKVxuXG4gICAgZmlyZUV2ZW50LmNsaWNrKGNsb3NlQnV0dG9uKVxuXG4gICAgZXhwZWN0KHRyYWNrRXZlbnRNb2NrKS50b0hhdmVCZWVuQ2FsbGVkKClcbiAgfSlcblxuICB0ZXN0KCdzaG91bGQgY2FsbCBoYW5kbGVDbG9zZVdpZGdldCB3aGVuIHdpZGdldCBpcyBjbG9zZWQnLCAoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlQ2xvc2VXaWRnZXRNb2NrID0gamVzdC5mbigpXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gc2V0dXAoe1xuICAgICAgaGFuZGxlQ2xvc2VXaWRnZXQ6IGhhbmRsZUNsb3NlV2lkZ2V0TW9jayxcbiAgICB9KVxuICAgIGNvbnN0IGNsb3NlQnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2Nsb3NlLXdpZGdldC1idXR0b24nKVxuXG4gICAgZmlyZUV2ZW50LmNsaWNrKGNsb3NlQnV0dG9uKVxuXG4gICAgZXhwZWN0KGhhbmRsZUNsb3NlV2lkZ2V0TW9jaykudG9IYXZlQmVlbkNhbGxlZCgpXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoicThCQUtBLEdBQU1BLE1BQUssQ0FBRyxjQUFDQyxFQUFJLHdEQUFHLENBQUMsQ0FBQyxPQUN0QixHQUFBQyxhQUFNLEVBQ0osb0JBQUMsa0JBQVcsZ0JBQ1YsVUFBVSxDQUFFLCtCQUFXLENBQ3ZCLFdBQVcsQ0FBRUMsd0JBQVksQ0FDekIsaUJBQWlCLENBQUUsc0NBQVcsQ0FDOUIsY0FBYyxDQUFFQywyQkFBZSxFQUMzQkgsQ0FBSSxFQUNSLENBQ0gsRUFDSEksUUFBUSxDQUFDLGlCQUFpQixDQUFFLFVBQU0sQ0FDaENDLElBQUksQ0FBQywyQ0FBMkMsQ0FBRSxVQUFNLElBQ2hEQyxFQUFjLENBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFLEdBQ1JULEtBQUssQ0FBQyxDQUM1QlUsVUFBVSxDQUFFSCxDQUNkLENBQUMsQ0FBQyxDQUZNSSxDQUFXLEdBQVhBLFdBQVcsQ0FJYkMsQ0FBVyxDQUFHRCxDQUFXLENBQUMscUJBQXFCLENBQUMsQ0FFdERFLGdCQUFTLENBQUNDLEtBQUssQ0FBQ0YsQ0FBVyxDQUFDLENBRTVCRyxNQUFNLENBQUNSLENBQWMsQ0FBQyxDQUFDUyxnQkFBZ0IsRUFDekMsQ0FBQyxDQUFDLENBRUZWLElBQUksQ0FBQyxxREFBcUQsQ0FBRSxVQUFNLElBQzFEVyxFQUFxQixDQUFHVCxJQUFJLENBQUNDLEVBQUUsRUFBRSxHQUNmVCxLQUFLLENBQUMsQ0FDNUJrQixpQkFBaUIsQ0FBRUQsQ0FDckIsQ0FBQyxDQUFDLENBRk1OLENBQVcsR0FBWEEsV0FBVyxDQUdiQyxDQUFXLENBQUdELENBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUV0REUsZ0JBQVMsQ0FBQ0MsS0FBSyxDQUFDRixDQUFXLENBQUMsQ0FFNUJHLE1BQU0sQ0FBQ0UsQ0FBcUIsQ0FBQyxDQUFDRCxnQkFBZ0IsRUFDaEQsQ0FBQyxDQUNILENBQUMsQ0FBQyJ9