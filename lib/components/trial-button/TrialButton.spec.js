"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_TrialButton=require("./TrialButton"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var setup=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return(0,_react.render)((0,_jsxRuntime.jsx)(_TrialButton.TrialButton,_objectSpread({title:"Trial"},a)))};describe("<TrialButton />",function(){test("Should show caption if captionTextContent prop is passed",function(){var a=setup({captionTextContent:"Trial version: 16 days left"}),b=a.getByTestId,c=b(_TrialButton.LABEL_TEST_ID);expect(c).toBeInTheDocument()})}),describe("<TrialButton />",function(){test("Button should not be clickeable if isInteractive prop is false",function(){var a=jest.fn(),b=setup({isInteractive:!1,onClickAction:a}),c=b.getByText,d=c("Trial");expect(d).toHaveStyle("cursor: default"),_react.fireEvent.mouseOver(d),expect(d).toHaveStyle("\n      background-color: transparent;\n    "),_react.fireEvent.click(d),expect(a).not.toBeCalled()})}),describe("<TrialButton />",function(){test("Button should be clickeable if isInteractive prop is not set",function(){var a=setup({isInteractive:!0}),b=a.getByText,c=b("Trial");expect(c).toHaveStyle("cursor: pointer")})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZXR1cCIsIm1vY2siLCJyZW5kZXIiLCJkZXNjcmliZSIsInRlc3QiLCJjYXB0aW9uVGV4dENvbnRlbnQiLCJnZXRCeVRlc3RJZCIsImNhcHRpb24iLCJMQUJFTF9URVNUX0lEIiwiZXhwZWN0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJvbkNsaWNrQWN0aW9uIiwiamVzdCIsImZuIiwiaXNJbnRlcmFjdGl2ZSIsImdldEJ5VGV4dCIsImJ1dHRvbiIsInRvSGF2ZVN0eWxlIiwiZmlyZUV2ZW50IiwibW91c2VPdmVyIiwiY2xpY2siLCJub3QiLCJ0b0JlQ2FsbGVkIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdHJpYWwtYnV0dG9uL1RyaWFsQnV0dG9uLnNwZWMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCB7IFRyaWFsQnV0dG9uLCBMQUJFTF9URVNUX0lEIH0gZnJvbSAnLi9UcmlhbEJ1dHRvbidcblxuY29uc3Qgc2V0dXAgPSAobW9jayA9IHt9KSA9PiByZW5kZXIoPFRyaWFsQnV0dG9uIHRpdGxlPVwiVHJpYWxcIiB7Li4ubW9ja30gLz4pXG5cbmRlc2NyaWJlKCc8VHJpYWxCdXR0b24gLz4nLCAoKSA9PiB7XG4gIHRlc3QoJ1Nob3VsZCBzaG93IGNhcHRpb24gaWYgY2FwdGlvblRleHRDb250ZW50IHByb3AgaXMgcGFzc2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHNldHVwKHtcbiAgICAgIGNhcHRpb25UZXh0Q29udGVudDogJ1RyaWFsIHZlcnNpb246IDE2IGRheXMgbGVmdCcsXG4gICAgfSlcbiAgICBjb25zdCBjYXB0aW9uID0gZ2V0QnlUZXN0SWQoTEFCRUxfVEVTVF9JRClcbiAgICBleHBlY3QoY2FwdGlvbikudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxufSlcblxuZGVzY3JpYmUoJzxUcmlhbEJ1dHRvbiAvPicsICgpID0+IHtcbiAgdGVzdCgnQnV0dG9uIHNob3VsZCBub3QgYmUgY2xpY2tlYWJsZSBpZiBpc0ludGVyYWN0aXZlIHByb3AgaXMgZmFsc2UnLCAoKSA9PiB7XG4gICAgY29uc3Qgb25DbGlja0FjdGlvbiA9IGplc3QuZm4oKVxuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSBzZXR1cCh7XG4gICAgICBpc0ludGVyYWN0aXZlOiBmYWxzZSxcbiAgICAgIG9uQ2xpY2tBY3Rpb24sXG4gICAgfSlcblxuICAgIGNvbnN0IGJ1dHRvbiA9IGdldEJ5VGV4dCgnVHJpYWwnKVxuXG4gICAgZXhwZWN0KGJ1dHRvbikudG9IYXZlU3R5bGUoJ2N1cnNvcjogZGVmYXVsdCcpXG5cbiAgICBmaXJlRXZlbnQubW91c2VPdmVyKGJ1dHRvbilcbiAgICBleHBlY3QoYnV0dG9uKS50b0hhdmVTdHlsZShgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBgKVxuXG4gICAgZmlyZUV2ZW50LmNsaWNrKGJ1dHRvbilcbiAgICBleHBlY3Qob25DbGlja0FjdGlvbikubm90LnRvQmVDYWxsZWQoKVxuICB9KVxufSlcblxuZGVzY3JpYmUoJzxUcmlhbEJ1dHRvbiAvPicsICgpID0+IHtcbiAgdGVzdCgnQnV0dG9uIHNob3VsZCBiZSBjbGlja2VhYmxlIGlmIGlzSW50ZXJhY3RpdmUgcHJvcCBpcyBub3Qgc2V0JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSBzZXR1cCh7XG4gICAgICBpc0ludGVyYWN0aXZlOiB0cnVlLFxuICAgIH0pXG5cbiAgICBjb25zdCBidXR0b24gPSBnZXRCeVRleHQoJ1RyaWFsJylcblxuICAgIGV4cGVjdChidXR0b24pLnRvSGF2ZVN0eWxlKCdjdXJzb3I6IHBvaW50ZXInKVxuICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Imk2QkFHQSxHQUFNQSxNQUFLLENBQUcsY0FBQ0MsRUFBSSx3REFBRyxDQUFDLENBQUMsT0FBSyxHQUFBQyxhQUFNLEVBQUMsb0JBQUMsd0JBQVcsZ0JBQUMsS0FBSyxDQUFDLE9BQU8sRUFBS0QsQ0FBSSxFQUFJLENBQUMsRUFFNUVFLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBRSxVQUFNLENBQ2hDQyxJQUFJLENBQUMsMERBQTBELENBQUUsVUFBTSxPQUM3Q0osS0FBSyxDQUFDLENBQzVCSyxrQkFBa0IsQ0FBRSw2QkFDdEIsQ0FBQyxDQUFDLENBRk1DLENBQVcsR0FBWEEsV0FBVyxDQUdiQyxDQUFPLENBQUdELENBQVcsQ0FBQ0UsMEJBQWEsQ0FBQyxDQUMxQ0MsTUFBTSxDQUFDRixDQUFPLENBQUMsQ0FBQ0csaUJBQWlCLEVBQ25DLENBQUMsQ0FDSCxDQUFDLENBQUMsQ0FFRlAsUUFBUSxDQUFDLGlCQUFpQixDQUFFLFVBQU0sQ0FDaENDLElBQUksQ0FBQyxnRUFBZ0UsQ0FBRSxVQUFNLElBQ3JFTyxFQUFhLENBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFLEdBQ1RiLEtBQUssQ0FBQyxDQUMxQmMsYUFBYSxHQUFPLENBQ3BCSCxhQUFhLENBQWJBLENBQ0YsQ0FBQyxDQUFDLENBSE1JLENBQVMsR0FBVEEsU0FBUyxDQUtYQyxDQUFNLENBQUdELENBQVMsQ0FBQyxPQUFPLENBQUMsQ0FFakNOLE1BQU0sQ0FBQ08sQ0FBTSxDQUFDLENBQUNDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUU3Q0MsZ0JBQVMsQ0FBQ0MsU0FBUyxDQUFDSCxDQUFNLENBQUMsQ0FDM0JQLE1BQU0sQ0FBQ08sQ0FBTSxDQUFDLENBQUNDLFdBQVcsZ0RBRXhCLENBRUZDLGdCQUFTLENBQUNFLEtBQUssQ0FBQ0osQ0FBTSxDQUFDLENBQ3ZCUCxNQUFNLENBQUNFLENBQWEsQ0FBQyxDQUFDVSxHQUFHLENBQUNDLFVBQVUsRUFDdEMsQ0FBQyxDQUNILENBQUMsQ0FBQyxDQUVGbkIsUUFBUSxDQUFDLGlCQUFpQixDQUFFLFVBQU0sQ0FDaENDLElBQUksQ0FBQyw4REFBOEQsQ0FBRSxVQUFNLE9BQ25ESixLQUFLLENBQUMsQ0FDMUJjLGFBQWEsR0FDZixDQUFDLENBQUMsQ0FGTUMsQ0FBUyxHQUFUQSxTQUFTLENBSVhDLENBQU0sQ0FBR0QsQ0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUVqQ04sTUFBTSxDQUFDTyxDQUFNLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLGlCQUFpQixDQUM5QyxDQUFDLENBQ0gsQ0FBQyxDQUFDIn0=