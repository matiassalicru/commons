"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.PlayContainer=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_reactI18next=require("react-i18next"),_style=require("./style"),_play=require("../../../../play"),_alertPortal=require("../../../../alert-portal"),_play2=require("../../constants/play"),_status=require("../../constants/status"),_timeFromNow=_interopRequireDefault(require("../../../../../utils/timeFromNow")),_formatHours=_interopRequireDefault(require("../../../../../utils/formatHours")),_concatenatedStatus=_interopRequireDefault(require("../../../../../utils/concatenatedStatus")),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!==(0,_typeof2.default)(a)&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}var ModalPortal=(0,_react.lazy)(function(){return Promise.resolve().then(function(){return _interopRequireWildcard(require("../../../../modal-portal"))}).then(function(a){return{default:a.ModalPortal}})}),PlayContainer=function(a){var b=a.title,c=a.status,d=a.taskId,e=a.project,f=void 0===e?{}:e,g=a.getLinks,h=a.dataCounter,i=a.handleUpdate,j=a.thisTaskHasPlay,k=h.stop,l=h.start,m=h.playData,n=h.stopError,o=h.playError,p=h.handleDeleteHour,q={name:(null===f||void 0===f?void 0:f.name)||null,clientName:(null===f||void 0===f?void 0:f.client_name)||null,brandName:(null===f||void 0===f?void 0:f.brand_name)||null},r=(0,_react.useRef)(null),s=(0,_react.useState)(!1),u=(0,_slicedToArray2.default)(s,2),v=u[0],w=u[1],x=m.active,y=m.currentTime,z=m.counterId,A=(0,_react.useState)(!1),B=(0,_slicedToArray2.default)(A,2),C=B[0],D=B[1],E=(0,_react.useState)(!1),F=(0,_slicedToArray2.default)(E,2),G=F[0],H=F[1],I=(0,_react.useState)({}),J=(0,_slicedToArray2.default)(I,2),K=J[0],L=J[1],M=(0,_react.useState)({show:!1,message:""}),N=(0,_slicedToArray2.default)(M,2),O=N[0],P=N[1],Q=(0,_react.useState)(!1),R=(0,_slicedToArray2.default)(Q,2),S=R[0],T=R[1],U=(0,_reactI18next.useTranslation)(["modals","alerts","counter","tooltips","task_panel","new_hour_modal"]),V=U.t;(0,_react.useEffect)(function(){if(o)try{var a=document.querySelectorAll("[data-js='playIcon']:not([data-js-id='playTaskId".concat(d,"'])"));o.code===_play2.CT004_ERROR_PLAY&&(a.forEach(function(a){a.style.visibility="visible"}),P({show:!0,message:V("new_hour_modal:message_limit")})),o.code===_play2.CT008_ERROR_PLAY&&a.forEach(function(a){a.style.visibility="hidden"}),w(!1)}catch(a){P({show:!0,message:V("alerts:errorApi")})}},[o,r]),(0,_react.useEffect)(function(){if(null!==n&&void 0!==n&&n.message){try{var a=JSON.parse(n.message),b=null===a||void 0===a?void 0:a.code;b===_play2.CT004_ERROR_PLAY&&H(!0)}catch(a){P({show:!0,message:V("alerts:errorApi")})}w(!1)}},[n,r]);var t=(0,_react.useCallback)(function(){if(null!==n&&void 0!==n&&n.message)try{var a=JSON.parse(n.message),b=a.meta;b&&p(b.counterId)}catch(a){P({show:!0,message:V("alerts:errorApi")})}H(!1)},[n]),W=(0,_react.useCallback)(function(){if(null!==n&&void 0!==n&&n.message){var a=JSON.parse(n.message),b=null===a||void 0===a?void 0:a.meta;null!==b&&void 0!==b&&b.hoursCharged||p(b.counterId)}H(!1)},[n]),X=(0,_react.useCallback)(function(){var a=0,b=0;if(null!==n&&void 0!==n&&n.message){var c=JSON.parse(n.message),d=null===c||void 0===c?void 0:c.meta;if(d){var e=d.hoursCharged,f=d.hoursNotCharged;a=(0,_formatHours.default)(e),b=(0,_formatHours.default)(f)}}return{hoursCharged:a,hoursNotCharged:b}},[n]),Y=(0,_react.useCallback)(function(){H(!1)},[]),Z=(0,_react.useCallback)(function(){P({show:!1,message:""})},[]),$=function(){var a=(0,_asyncToGenerator2.default)(_regenerator.default.mark(function a(){var e,f,h;return _regenerator.default.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(e=document.querySelectorAll("[data-js='playIcon']:not([data-js-id='playTaskId".concat(d,"'])")),w(!0),!j){a.next=6;break}D(!0),a.next=18;break;case 6:return a.prev=6,a.next=9,g();case 9:f=a.sent,h=f.data,L(h.taskLinks),c!==_status.STATUS_PROCESS&&(0,_concatenatedStatus.default)(h.taskLinks).hasDependencies?T(!0):(e.forEach(function(a){a.style.visibility="hidden"}),l({title:b,taskID:d,projectTimeKeeper:q},function(){w(!1)}),c!==_status.STATUS_PROCESS&&i({status:_status.STATUS_PROCESS})),a.next=18;break;case 15:a.prev=15,a.t0=a["catch"](6),P({show:!0,message:V("alerts:errorApi")});case 18:case"end":return a.stop();}},a,null,[[6,15]])}));return function(){return a.apply(this,arguments)}}(),_=(0,_react.useCallback)(function(){T(!1),w(!1)},[r]),aa=(0,_react.useCallback)(function(){var a=!!(0<arguments.length&&arguments[0]!==void 0)&&arguments[0];return{accept:V("".concat(a?"general_abm:save":"modals:accept")),cancel:V("".concat(a?"counter:delete_hour":"modals:cancel"))}},[]),ba=(0,_react.useCallback)(function(){var a=document.querySelectorAll("[data-js='playIcon']:not([data-js-id='playTaskId".concat(d,"'])"));a.forEach(function(a){a.style.visibility="visible"}),k({taskId:d,counterId:z,currentTime:y},function(){w(!1)}),D(!1)},[d,z,y,r]),ca=(0,_react.useCallback)(function(){D(!1),w(!1)},[r]);return(0,_jsxRuntime.jsxs)(_style.LYWrapper,{"data-js":"playIcon","data-js-id":"playTaskId".concat(d),isPlay:!(x&&j),showPlay:j||!x,children:[(0,_jsxRuntime.jsx)(_play.Play,{taskID:d,ref:r,hasMargin:!1,playVariant:"normal",isDisabled:v,handleClick:$,status:x&&j?_play2.STOP:_play2.PLAY,wordingTip:V("tooltips:".concat(x&&j?_play2.STOP:_play2.PLAY))}),(0,_jsxRuntime.jsxs)(_react.Suspense,{fallback:(0,_jsxRuntime.jsx)("div",{}),children:[C&&(0,_jsxRuntime.jsx)(ModalPortal,{variant:"normal",closeModal:ca,translations:aa(),clickButtonAccept:ba,clickButtonCancel:ca,title:V("modals:titleChargeHours"),elementId:"#modals-portal-taskpanel",textContent:V("modals:contentChargeHours",{timer:(0,_timeFromNow.default)(y),title:b})}),S&&(0,_jsxRuntime.jsx)(ModalPortal,{variant:"danger",closeModal:_,translations:aa(),clickButtonAccept:function handleAcceptConcatenate(){var a=document.querySelectorAll("[data-js='playIcon']:not([data-js-id='playTaskId".concat(d,"'])"));a.forEach(function(a){a.style.visibility="hidden"});var c=(0,_concatenatedStatus.default)(K);T(!1),l({title:b,taskID:d,projectTimeKeeper:q},function(){return w(!1)}),i({status:_status.STATUS_PROCESS,linkOption:{option:"delete_".concat(c.type,"_link"),filterByStatus:c.status,change_type:"status"}})},elementId:"#modals-portal-taskpanel",clickButtonCancel:_,title:V("task_panel:concatenated_dependencies_title_modal"),textContent:V("task_panel:concatenated_dependencies",{taskName:b}),children:(0,_jsxRuntime.jsx)("b",{children:V("task_panel:concatenated_dependencies_question_modal")})}),G&&(0,_jsxRuntime.jsx)(ModalPortal,{variant:"normal",clickButtonCancel:t,title:V("counter:hours_limit"),translations:aa(!0),elementId:"#modals-portal-taskpanel",closeModal:W,clickButtonAccept:Y,textContent:V("counter:message_limit",X())}),O.show&&(0,_jsxRuntime.jsx)(_alertPortal.AlertPortal,{position:"center-bottom",text:O.message,onClose:Z,variant:"danger",icon:"check",idPortal:"alerts-portal"})]})]})};exports.PlayContainer=PlayContainer,PlayContainer.propTypes={taskId:_propTypes.default.number.isRequired,project:_propTypes.default.object,getLinks:_propTypes.default.func.isRequired};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,