"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.useStyles=exports.ArchiveContainer=void 0;var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_reactI18next=require("react-i18next"),_Checkbox=_interopRequireDefault(require("@material-ui/core/Checkbox")),_FormControlLabel=_interopRequireDefault(require("@material-ui/core/FormControlLabel")),_buttonIconCustom=require("../../../button-icon-custom"),_play=_interopRequireDefault(require("../utils/play")),_eventTaskPanel=_interopRequireWildcard(require("../utils/eventTaskPanel")),_styles=require("@material-ui/core/styles"),_status=require("../constants/status"),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!==(0,_typeof2.default)(a)&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}var ModalPortal=(0,_react.lazy)(function(){return Promise.resolve().then(function(){return _interopRequireWildcard(require("../../../modal-portal"))}).then(function(a){return{default:a.ModalPortal}})}),useStyles=(0,_styles.makeStyles)({label:{fontSize:"14px"}});exports.useStyles=useStyles;var ArchiveContainer=function(a){var b=a.taskId,c=a.status,d=a.archived,e=a.customCSS,f=a.childQ,g=void 0===f?0:f,h=a.reload,i=a.afterUpdate,j=void 0===i?function(){}:i,k=a.handleUpdate,l=void 0===k?function(){}:k,m=e.size,n=e.color,o=e.iconSize,p=e.onHoverColor,q=e.onHoverBackground,r=(0,_reactI18next.useTranslation)(["tooltips","modals"]),s=r.t,t=(0,_play.default)(b),u=(0,_react.useState)(!1),v=(0,_slicedToArray2.default)(u,2),w=v[0],x=v[1],y=(0,_react.useState)(!1),z=(0,_slicedToArray2.default)(y,2),A=z[0],B=z[1],C=useStyles(),D=(0,_react.useMemo)(function(){return d?"inbox-out":"archive"},[d]),E=(0,_react.useMemo)(function(){return s(d?"unarchive-task":"archive-task")},[d]),F={accept:s("modals:accept"),cancel:s("modals:cancel")},G=(0,_react.useCallback)(function(){x(!0)},[]),H=(0,_react.useCallback)(function(){x(!1)},[]),I=function(a){l(a).then(function(){j()})},J=(0,_react.useCallback)(function(a){B(a.target.checked)},[]),K=(0,_react.useMemo)(function(){return d?s("modals:titleUnarchiveTasks"):s("modals:titleArchiveTasks")},[d]);return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_buttonIconCustom.ButtonIconCustomWithTooltip,{icon:D,size:m,color:n,iconSize:o,wordingTip:E,onHoverColor:p,onClikAction:function handleClickArchive(){B(!1);var a=0<g,e=(0,_play.default)(b),f=c!==_status.STATUS_FINISHED,h=!d;return h&&(f||a)?void G():h||e||!a?void I({archived:!d}):void G()},onHoverBackground:q}),(0,_jsxRuntime.jsx)(_react.Suspense,{fallback:(0,_jsxRuntime.jsx)("div",{}),children:w&&(0,_jsxRuntime.jsx)(ModalPortal,{variant:"normal",title:K,textContent:function getTextModal(){if(!d){if(t)return s("modals:archiveTaskWithPlay");if(c!==_status.STATUS_FINISHED)return s("modals:archiveTaskNoFinished");if(0<g)return""}else if(0<g)return""}(),closeModal:H,translations:F,elementId:"#modals-portal-taskpanel",clickButtonCancel:H,clickButtonAccept:function handleAcceptModal(){x(!1);var a=(0,_play.default)(+b),c={archived:!d};a&&(0,_eventTaskPanel.default)(_eventTaskPanel.ACTION_STOP_COUNTER),!g||(c.archiveSubtasks=A),I(c)},children:0<g&&(0,_jsxRuntime.jsx)(_FormControlLabel.default,{control:(0,_jsxRuntime.jsx)(_Checkbox.default,{checked:A,onChange:J,name:"subtasks",color:"primary",inputProps:{"data-robot-id":"entity-filter-search-option"}}),label:d?s("modals:unarchiveSubtasks"):s("modals:archiveSubtasks"),classes:{label:C.label}},"subtasks-check")})})]})};exports.ArchiveContainer=ArchiveContainer,ArchiveContainer.propTypes={reload:_propTypes.default.bool,childQ:_propTypes.default.number,status:_propTypes.default.string,afterUpdate:_propTypes.default.func,handleUpdate:_propTypes.default.func,taskId:_propTypes.default.number.isRequired,archived:_propTypes.default.bool.isRequired,customCSS:_propTypes.default.shape({size:_propTypes.default.number,iconSize:_propTypes.default.number,color:_propTypes.default.string,onHoverColor:_propTypes.default.string,onHoverBackground:_propTypes.default.string}).isRequired};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,