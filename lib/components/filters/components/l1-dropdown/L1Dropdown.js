"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.L1Dropdown=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("react"),_reactDom=_interopRequireDefault(require("react-dom")),_reactUuid=_interopRequireDefault(require("react-uuid")),_reactI18next=require("react-i18next"),_styles=require("./styles"),_item=require("./components/item"),_useArrowCounter=require("../../../../hooks/use-arrow-counter"),_Context=require("../../Context"),_amplitude=require("../../../../constants/filters/amplitude"),_config=require("../../../../constants/filters/config"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var L1DropdownPortal=function(a){var b,c=a.filters,d=a.onClose,e=a.l1Positions,f=a.toggleL2Dropdown,g=a.searchFilters,h=void 0===g?"":g,i=a.appliedFilters,j=void 0===i?{}:i,k=a.addFilterToUrl,l=a.setSearchFilters,m=a.hasTaskFilterApplied,n=(0,_reactI18next.useTranslation)(_config.I18N_SECTION),o=n.t,p=(0,_react.useContext)(_Context.FilterContext),q=p.trackEvent,r=p.config,s=(0,_react.useMemo)(function(){return Object.keys(c)},[c]),t=s.filter(function(a){var b;return(null===(b=j[a])||void 0===b?void 0:b.id)!==c[a].id}),u=h?t.filter(function(a){return h&&o(a).toLowerCase().includes(h.toLocaleLowerCase())}):t,v=(0,_react.useCallback)(function(a){f(a,!1)},[]),w=(0,_react.useCallback)(function(a){q({event:_amplitude.AMPLITUDE_EVENTS.SELECT_FILTER,actionType:_amplitude.AMPLITUDE_ACTIONS.CLICK,selectedByInput:!!h,option:a}),v(a)},[h]),x=(0,_react.useCallback)(function(){k("tasks",[{id:h}]),l(""),d()},[h]),y=(0,_react.useCallback)(function(){var a={event:_amplitude.AMPLITUDE_EVENTS.SELECT_FILTER,actionType:_amplitude.AMPLITUDE_ACTIONS.KEYBOARD,selectedByInput:!!h};if(h&&0===u.length&&!m)x(),q(_objectSpread(_objectSpread({},a),{},{option:h}));else{var d=u[b],e=c[d];!!u.length&&e&&(v(e),q(_objectSpread(_objectSpread({},a),{},{option:e.id})))}},[u,h,c]);return b=(0,_useArrowCounter.useArrowCounter)({dataMax:u.length,onConfirm:y,onExit:function onExit(){return!0},ignoreNext:!1,resetCounter:!0}),(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_styles.SCWrapper,{l1Positions:e,"data-js":"filters-l1-dropdown",showL1:!!u.length||!m,children:[u.map(function(a,d){var e;return(0,_jsxRuntime.jsx)(_item.Item,{data:c[a],onClick:w,text:c[a].title||c[a].id,isSelected:d===b,icon:null===(e=r[c[a].id])||void 0===e?void 0:e.icon},(0,_reactUuid.default)())}),h&&!m&&(0,_jsxRuntime.jsx)(_item.Item,{onClick:x,text:"".concat(o("taskContains")," \"").concat(h,"\"")},(0,_reactUuid.default)())]}),(0,_jsxRuntime.jsx)(_styles.SCBackdrop,{onClick:d,"data-robot-id":"filters-l1dropdown-backdrop"})]})},L1Dropdown=function(a){var b=a.portalElementId,c=document.querySelector(b||"#root");return c?_reactDom.default.createPortal((0,_jsxRuntime.jsx)(L1DropdownPortal,_objectSpread({},a)),c):null};exports.L1Dropdown=L1Dropdown;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,