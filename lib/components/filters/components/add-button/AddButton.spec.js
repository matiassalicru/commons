"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_AddButton=require("./AddButton"),_Context=require("../../Context"),_keyboardKeys=require("../../../../utils/keyboardKeys"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var setup=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:jest.fn();return(0,_react.render)((0,_jsxRuntime.jsx)(_Context.FilterContext.Provider,{value:{trackEvent:b},children:(0,_jsxRuntime.jsx)(_AddButton.AddButton,_objectSpread({onSearch:function onSearch(){return!0},onClick:function onClick(){return!0},isSimple:!1,setSearchFilters:function setSearchFilters(){return!0},setChipsKeyboardNavigationDisabled:function setChipsKeyboardNavigationDisabled(){return!0},show:!0},a))}))};describe("<AddButton />",function(){test("Should not show div text when button is simple",function(){var a=setup({isSimple:!0,searchFilters:"dummy"}),b=a.container,c=b.querySelectorAll("div").length;expect(c).toBe(1)}),test("Should call onClick function when button is clicked",function(){var a=jest.fn(),b=jest.fn(),c=setup({onClick:b},a),d=c.getByRole,e=d("button");_react.fireEvent.click(e),expect(b).toHaveBeenCalled()}),test("should not show button if show is false",function(){var a=setup({show:!1}),b=a.container;expect(b).toBeInTheDocument()}),test("Should call onSearch function when input is filled",function(){var a=jest.fn(),b=setup({onSearch:a}),c=b.container,d=c.querySelector("span");_react.fireEvent.input(d,{currentTarget:{textContent:"dummy"}}),_react.fireEvent.keyPress(d,{key:"Enter"}),expect(a).toHaveBeenCalled()}),test("Should focus button when command + shift + f keys are pressed and focus input when is clicked on mac",function(){Object.defineProperty(window,"navigator",{value:{userAgent:"Mac OS X"},writable:!0});var a=jest.fn(),b=jest.fn(),c=setup({onClick:a,setChipsKeyboardNavigationDisabled:b}),d=c.getByRole,e=c.container,f=d("button"),g=e.querySelector("span");_react.fireEvent.keyDown(e,{code:_keyboardKeys.KEYS.F,metaKey:!0,shiftKey:!0}),_react.fireEvent.click(f),expect(a).toHaveBeenCalled(),expect(b).toHaveBeenCalledWith(!1),expect(g).toHaveFocus()}),test("Should focus button when ctrl + shift + f keys are pressed and focus input when is clicked when is not mac",function(){Object.defineProperty(window,"navigator",{value:{userAgent:"Another platform"},writable:!0});var a=jest.fn(),b=jest.fn(),c=setup({onClick:a,setChipsKeyboardNavigationDisabled:b}),d=c.getByRole,e=c.container,f=d("button"),g=e.querySelector("span");_react.fireEvent.keyDown(e,{code:_keyboardKeys.KEYS.F,ctrlKey:!0,shiftKey:!0}),_react.fireEvent.click(f),expect(a).toHaveBeenCalled(),expect(b).toHaveBeenCalledWith(!1),expect(g).toHaveFocus()}),test("Should call setChipsKeyboardNavigationDisabled when button is blured",function(){var a=jest.fn(),b=setup({setChipsKeyboardNavigationDisabled:a}),c=b.getByRole,d=c("button");_react.fireEvent.blur(d),expect(a).toHaveBeenCalledWith(!0)}),test("should not show label when searchFilter is filled, isSimple is true or showLabel is false",function(){setup({searchFilters:"dummy text",isSimple:!0,openedByChip:!0,isMenuOpen:!1});var a=document.querySelector("[data-js=\"add-filter-button\"]");expect(a).not.toBeInTheDocument()}),test("should show label when searchFilter not is filled, isSimple is false or showLabel is true",function(){var a=setup({isSimple:!1,openedByChip:!1,isMenuOpen:!0}),b=a.getByText,c=b("+ addFilter");expect(c).toBeInTheDocument()}),test("should don\xB4t do focus on button addFilter when notTypeable is true ",function(){var a=setup({notTypeable:!0}),b=a.getByRole,c=a.container,d=c.querySelector("span"),e=b("button");_react.fireEvent.click(e),expect(d).not.toHaveFocus()})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,