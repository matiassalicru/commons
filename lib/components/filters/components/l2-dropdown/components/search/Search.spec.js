"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_Search=require("./Search"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var setup=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return(0,_react.render)((0,_jsxRuntime.jsx)(_Search.Search,_objectSpread({onSearch:function onSearch(){return!0},setData:function setData(a){return a},data:[{name:"Mocked name",id:"1",categoryName:"category",seniority:null}],isFilter:!0},a)))};describe("<Search/>",function(){test("should call function when onChange is executed in the inputValue",function(){var a=jest.fn(),b=setup({onSearch:a,isFilter:!1}),c=b.getByPlaceholderText,d=c("search");_react.fireEvent.change(d,{target:{value:"Dummy text"}}),expect(a).toHaveBeenCalled()})}),describe("<Search/>",function(){test("should call function when onChange is executed in the inputValue",function(){var a=jest.fn(),b=setup({setData:a}),c=b.getByPlaceholderText,d=c("search");_react.fireEvent.change(d,{target:{value:"Mocked"}}),expect(a).toHaveBeenCalled()}),test("Should match filter with one exact result",function(){var a=jest.fn(function(a){return a}),b=setup({setData:a}),c=b.getByPlaceholderText,d=c("search");_react.fireEvent.change(d,{target:{value:"Mocked"}}),expect(a.mock.results[0].value).toHaveLength(1)}),test("Should match filter with partial result",function(){var a=jest.fn(function(a){return a}),b=setup({setData:a}),c=b.getByPlaceholderText,d=c("search");_react.fireEvent.change(d,{target:{value:"ked"}}),expect(a.mock.results[0].value).toHaveLength(1)}),test("Should return empty when no match finded",function(){var a=jest.fn(function(a){return a}),b=setup({setData:a}),c=b.getByPlaceholderText,d=c("search");_react.fireEvent.change(d,{target:{value:"Not"}}),expect(a.mock.results[0].value).toHaveLength(0)}),test("Should work with partial search space separated",function(){var a=jest.fn(function(a){return a}),b=setup({setData:a}),c=b.getByPlaceholderText,d=c("search");_react.fireEvent.change(d,{target:{value:"ked ame"}}),expect(a.mock.results[0].value).toHaveLength(1)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,