"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=require("@testing-library/react"),_FileButtons=require("./FileButtons"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var setup=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return(0,_react.render)((0,_jsxRuntime.jsx)(_FileButtons.FileButtons,_objectSpread({url:"http://url.com/mock",source:"S3",file_type:"pdf"},a)))};describe("<FileButtons />",function(){test("Should be in the document",function(){var a=setup(),b=a.container;expect(b).toBeInTheDocument()}),test("Should be in the document with full variant",function(){var a=setup({variant:"full",file:{file_type:"pdf",url:"http://url.com/mock",source:"S3"}}),b=a.container;expect(b).toBeInTheDocument()}),test("Should be in the document",function(){var a=jest.fn(),b=setup({handleClick:a}),c=b.getAllByTestId,d=c("times")[2];_react.fireEvent.click(d),expect(a).toHaveBeenCalled()})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZXR1cCIsIm1vY2siLCJyZW5kZXIiLCJkZXNjcmliZSIsInRlc3QiLCJjb250YWluZXIiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInZhcmlhbnQiLCJmaWxlIiwiZmlsZV90eXBlIiwidXJsIiwic291cmNlIiwiaGFuZGxlQ2xpY2tNb2NrIiwiamVzdCIsImZuIiwiaGFuZGxlQ2xpY2siLCJnZXRBbGxCeVRlc3RJZCIsImRlbGV0ZUJ1dHRvbiIsImZpcmVFdmVudCIsImNsaWNrIiwidG9IYXZlQmVlbkNhbGxlZCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2RvY3VtZW50LWZpbGUvRmlsZUJ1dHRvbnMuc3BlYy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHsgRmlsZUJ1dHRvbnMgfSBmcm9tICcuL0ZpbGVCdXR0b25zJ1xuXG5jb25zdCBzZXR1cCA9IChtb2NrID0ge30pID0+IHJlbmRlcig8RmlsZUJ1dHRvbnMgdXJsPVwiaHR0cDovL3VybC5jb20vbW9ja1wiIHNvdXJjZT1cIlMzXCIgZmlsZV90eXBlPVwicGRmXCIgey4uLm1vY2t9IC8+KVxuXG5kZXNjcmliZSgnPEZpbGVCdXR0b25zIC8+JywgKCkgPT4ge1xuICB0ZXN0KCdTaG91bGQgYmUgaW4gdGhlIGRvY3VtZW50JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSBzZXR1cCgpXG4gICAgZXhwZWN0KGNvbnRhaW5lcikudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIHRlc3QoJ1Nob3VsZCBiZSBpbiB0aGUgZG9jdW1lbnQgd2l0aCBmdWxsIHZhcmlhbnQnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHNldHVwKHtcbiAgICAgIHZhcmlhbnQ6ICdmdWxsJyxcbiAgICAgIGZpbGU6IHtcbiAgICAgICAgZmlsZV90eXBlOiAncGRmJyxcbiAgICAgICAgdXJsOiAnaHR0cDovL3VybC5jb20vbW9jaycsXG4gICAgICAgIHNvdXJjZTogJ1MzJyxcbiAgICAgIH0sXG4gICAgfSlcbiAgICBleHBlY3QoY29udGFpbmVyKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgdGVzdCgnU2hvdWxkIGJlIGluIHRoZSBkb2N1bWVudCcsICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVDbGlja01vY2sgPSBqZXN0LmZuKClcbiAgICBjb25zdCB7IGdldEFsbEJ5VGVzdElkIH0gPSBzZXR1cCh7XG4gICAgICBoYW5kbGVDbGljazogaGFuZGxlQ2xpY2tNb2NrLFxuICAgIH0pXG4gICAgY29uc3QgZGVsZXRlQnV0dG9uID0gZ2V0QWxsQnlUZXN0SWQoJ3RpbWVzJylbMl1cblxuICAgIGZpcmVFdmVudC5jbGljayhkZWxldGVCdXR0b24pXG5cbiAgICBleHBlY3QoaGFuZGxlQ2xpY2tNb2NrKS50b0hhdmVCZWVuQ2FsbGVkKClcbiAgfSlcbn0pXG4iXSwibWFwcGluZ3MiOiJpNkJBR0EsR0FBTUEsTUFBSyxDQUFHLGNBQUNDLEVBQUksd0RBQUcsQ0FBQyxDQUFDLE9BQUssR0FBQUMsYUFBTSxFQUFDLG9CQUFDLHdCQUFXLGdCQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUtELENBQUksRUFBSSxDQUFDLEVBRXBIRSxRQUFRLENBQUMsaUJBQWlCLENBQUUsVUFBTSxDQUNoQ0MsSUFBSSxDQUFDLDJCQUEyQixDQUFFLFVBQU0sQ0FDdEMsTUFBc0JKLEtBQUssRUFBRSxDQUFyQkssQ0FBUyxHQUFUQSxTQUFTLENBQ2pCQyxNQUFNLENBQUNELENBQVMsQ0FBQyxDQUFDRSxpQkFBaUIsRUFDckMsQ0FBQyxDQUFDLENBRUZILElBQUksQ0FBQyw2Q0FBNkMsQ0FBRSxVQUFNLENBQ3hELE1BQXNCSixLQUFLLENBQUMsQ0FDMUJRLE9BQU8sQ0FBRSxNQUFNLENBQ2ZDLElBQUksQ0FBRSxDQUNKQyxTQUFTLENBQUUsS0FBSyxDQUNoQkMsR0FBRyxDQUFFLHFCQUFxQixDQUMxQkMsTUFBTSxDQUFFLElBQ1YsQ0FDRixDQUFDLENBQUMsQ0FQTVAsQ0FBUyxHQUFUQSxTQUFTLENBUWpCQyxNQUFNLENBQUNELENBQVMsQ0FBQyxDQUFDRSxpQkFBaUIsRUFDckMsQ0FBQyxDQUFDLENBRUZILElBQUksQ0FBQywyQkFBMkIsQ0FBRSxVQUFNLElBQ2hDUyxFQUFlLENBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFLEdBQ05mLEtBQUssQ0FBQyxDQUMvQmdCLFdBQVcsQ0FBRUgsQ0FDZixDQUFDLENBQUMsQ0FGTUksQ0FBYyxHQUFkQSxjQUFjLENBR2hCQyxDQUFZLENBQUdELENBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FFL0NFLGdCQUFTLENBQUNDLEtBQUssQ0FBQ0YsQ0FBWSxDQUFDLENBRTdCWixNQUFNLENBQUNPLENBQWUsQ0FBQyxDQUFDUSxnQkFBZ0IsRUFDMUMsQ0FBQyxDQUNILENBQUMsQ0FBQyJ9