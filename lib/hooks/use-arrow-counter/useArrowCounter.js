"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.useArrowCounter=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_react=require("react"),_pressArrow=require("../../utils/pressArrow/pressArrow"),_constants=require("../../constants"),VERTICAL="vertical",HORIZONTAL="horizontal",useArrowCounter=function(a){function b(a){var b;switch(a.keyCode){case _constants.KEY_DOWN:if(g||k===HORIZONTAL||m)return;b=(0,_pressArrow.pressDownArrow)(p,c),q(b),a.preventDefault();break;case _constants.KEY_UP:if(k===HORIZONTAL)return;b=(0,_pressArrow.pressUpArrow)(p,c),q(b),a.preventDefault();break;case _constants.KEY_RIGHT:if(g||k===VERTICAL||m)return;b=(0,_pressArrow.pressDownArrow)(p,c),q(b),a.preventDefault();break;case _constants.KEY_LEFT:if(k===VERTICAL||m)return;b=(0,_pressArrow.pressUpArrow)(p,c),q(b),a.preventDefault();break;case _constants.KEY_ENTER:d(p),i?r():null;break;case _constants.KEY_TAB:case _constants.KEY_ESCAPE:case _constants.KEY_SHIFT&&_constants.KEY_TAB:f(),i?r():null;break;default:}}var c=a.dataMax,d=a.onConfirm,f=a.onExit,e=a.ignoreNext,g=void 0!==e&&e,h=a.resetCounter,i=void 0!==h&&h,j=a.mode,k=void 0===j?"vertical":j,l=a.disabled,m=void 0!==l&&l,n=(0,_react.useState)(0),o=(0,_slicedToArray2.default)(n,2),p=o[0],q=o[1],r=(0,_react.useCallback)(function(){q(0)},[]);return(0,_react.useEffect)(function(){if(p>c){var a=c-1;q(0<=a?a:0)}},[c,p]),(0,_react.useEffect)(function(){m&&q(0)},[m]),(0,_react.useEffect)(function(){return document.addEventListener("keydown",b),function(){document.removeEventListener("keydown",b)}},[d,f,p,q,g,c]),p};exports.useArrowCounter=useArrowCounter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWRVJUSUNBTCIsIkhPUklaT05UQUwiLCJ1c2VBcnJvd0NvdW50ZXIiLCJkb3duSGFuZGxlciIsImUiLCJuZXh0U2VsZWN0b3IiLCJrZXlDb2RlIiwiS0VZX0RPV04iLCJpZ25vcmVOZXh0IiwibW9kZSIsImRpc2FibGVkIiwicHJlc3NEb3duQXJyb3ciLCJjb3VudGVyIiwiZGF0YU1heCIsInNldENvdW50ZXIiLCJwcmV2ZW50RGVmYXVsdCIsIktFWV9VUCIsInByZXNzVXBBcnJvdyIsIktFWV9SSUdIVCIsIktFWV9MRUZUIiwiS0VZX0VOVEVSIiwib25Db25maXJtIiwicmVzZXRDb3VudGVyIiwic2V0SW5pdGlhbENvdW50ZXIiLCJLRVlfVEFCIiwiS0VZX0VTQ0FQRSIsIktFWV9TSElGVCIsIm9uRXhpdCIsInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJ1c2VFZmZlY3QiLCJuZXh0VmFsdWUiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2hvb2tzL3VzZS1hcnJvdy1jb3VudGVyL3VzZUFycm93Q291bnRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC1leHByZXNzaW9ucyAqL1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHByZXNzRG93bkFycm93LCBwcmVzc1VwQXJyb3cgfSBmcm9tICcuLi8uLi91dGlscy9wcmVzc0Fycm93L3ByZXNzQXJyb3cnXG5pbXBvcnQgeyBLRVlfVVAsIEtFWV9ET1dOLCBLRVlfRU5URVIsIEtFWV9UQUIsIEtFWV9FU0NBUEUsIEtFWV9TSElGVCwgS0VZX0xFRlQsIEtFWV9SSUdIVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cydcblxuY29uc3QgVkVSVElDQUwgPSAndmVydGljYWwnXG5jb25zdCBIT1JJWk9OVEFMID0gJ2hvcml6b250YWwnXG5cbmludGVyZmFjZSBVc2VBcnJvd0NvdW50ZXJQcm9wcyB7XG4gIGRhdGFNYXg6IG51bWJlclxuICBvbkNvbmZpcm06IChjb3VudGVyOiBudW1iZXIpID0+IHZvaWRcbiAgb25FeGl0OiAoKSA9PiB2b2lkXG4gIGlnbm9yZU5leHQ6IGJvb2xlYW5cbiAgcmVzZXRDb3VudGVyOiBib29sZWFuXG4gIG1vZGU/OiAnaG9yaXpvbnRhbCcgfCAndmVydGljYWwnXG4gIGRpc2FibGVkPzogYm9vbGVhblxufVxuXG4vKipcbiAqXG4gKiBAcGFyYW0geyp9IGRhdGFNYXggPiBsZW5ndGggZGUgdW4gYXJyYXkgYSByZWNvcnJlclxuICogQHBhcmFtIHsqfSBvbkNvbmZpcm0gPiBmdW5jacOzbiBlamVjdXRhZGEgYWwgY29uZmlybWFyXG4gKiBAcGFyYW0geyp9IG9uRXhpdCAgPiBmdW5jacOzbiBlamVjdXRhZGEgYWwgY2FuY2VsYXJcbiAqIEBwYXJhbSB7Kn0gaWdub3JlTmV4dCAgPiBib29sZWFubyBwYXJhIGluZGljYXIgc2kgaGF5IHF1ZSBjYXJnYXIgaW5mb3JtYWNpw7NuXG4gKiBAcGFyYW0geyp9IHJlc2V0Q291bnRlciAgPiBib29sZWFubyBxdWUgaW5kaWNhIHNpIG5lY2VzaXRhIHF1ZSBzZSByZWluaWNpZSBlbCBjb250YWRvclxuICogQHBhcmFtIHsqfSBtb2RlICA+IHN0cmluZyBxdWUgaW5kaWNhIGVsIG1vZG8gZGUgbmF2ZWdhY2lvbiBlbnRyZSBpdGVtcywgcG9yIGRlZmVjdG8gZXMgdmVydGljYWxcbiAqIEBwYXJhbSB7Kn0gZGlzYWJsZWQgID4gYm9vbGVhbm8gcXVlIGluZGljYSBzaSBlbCBob29rIGVzdGEgZGVzaGFiaWxpdGFkb1xuICogQHJldHVybnMgPiBjb250YWRvciBjb24gbGEgcG9zaWNpw7NuIGRlbCBhcnJheVxuICovXG5cbmV4cG9ydCBjb25zdCB1c2VBcnJvd0NvdW50ZXIgPSAoe1xuICBkYXRhTWF4LFxuICBvbkNvbmZpcm0sXG4gIG9uRXhpdCxcbiAgaWdub3JlTmV4dCA9IGZhbHNlLFxuICByZXNldENvdW50ZXIgPSBmYWxzZSxcbiAgbW9kZSA9ICd2ZXJ0aWNhbCcsXG4gIGRpc2FibGVkID0gZmFsc2UsXG59OiBVc2VBcnJvd0NvdW50ZXJQcm9wcyk6IG51bWJlciA9PiB7XG4gIC8qKlxuICAgKiBpbmljaWFsaXpvIHVuIGVzdGFkbyBwYXJhIHNhYmVyIGN1YW5kbyBlcyBwcmVzaW9uYWRhIHVuYSB0ZWNsYVxuICAgKi9cblxuICBjb25zdCBbY291bnRlciwgc2V0Q291bnRlcl0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBzZXRJbml0aWFsQ291bnRlciA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRDb3VudGVyKDApXG4gIH0sIFtdKVxuXG4gIC8qIEV2aXRhbW9zIHF1ZSBjdWFuZG8gc2UgYWN0dWFsaXplIGVsIG1heGltbyBkZSBlbGVtZW50b3NcbiAgc2kgZWwgc2VsZWNjaW9uYWRvIGVzIG1heW9yIGxvIGJhamFtb3MgYWwgbWF4aW1vXG4gIHkgc2kgZXMgbWVub3IgYSBjZXJvIGxvIHBvbmVtb3MgY29tbyBjZXJvXG4gIChlc3RvIHNlcmlhIHBhcmEgZWwgY2FzbyBjdWFuZG8gZGF0YU1heCA9PT0gMCkgKi9cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY291bnRlciA+IGRhdGFNYXgpIHtcbiAgICAgIGNvbnN0IG5leHRWYWx1ZSA9IGRhdGFNYXggLSAxXG4gICAgICBzZXRDb3VudGVyKG5leHRWYWx1ZSA+PSAwID8gbmV4dFZhbHVlIDogMClcbiAgICB9XG4gIH0sIFtkYXRhTWF4LCBjb3VudGVyXSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGRpc2FibGVkICYmIHNldENvdW50ZXIoMClcbiAgfSwgW2Rpc2FibGVkXSlcblxuICAvKipcbiAgICogQ29uIGNhZGEgdGVjbGEgcHJlc2lvbmFkYSB1biBldmVudCBsaXN0ZW5lciBkaXNwYXJhIGVzdGEgZnVuY2nDs25cbiAgICovXG4gIGZ1bmN0aW9uIGRvd25IYW5kbGVyKGUpIHtcbiAgICAvLyBkZWNsYXJvIHVuYSB2YXJpYWJsZSBxdWUgbWUgc2Vydmlyw6EgcGFyYSBhY3R1YWxpemFyIGVzdGFkb3NcbiAgICBsZXQgbmV4dFNlbGVjdG9yXG5cbiAgICBzd2l0Y2ggKGUua2V5Q29kZSkge1xuICAgICAgLyoqXG4gICAgICAgKiBzZSBlbnZpYW4gYSBsYXMgZnVuY2lvbmVzIGVsIGNvbnRhZG9yIGFjdHVhbCB5IGVsIGxlbmd0aCBkZSB1biBhcnJheVxuICAgICAgICogcXVlIHJlY2libyBjb21vIHBhcsOhbWV0cm8uIE1lIGRldnVlbHZlIHVuIG51bWVybyBxdWUgcmVwcmVzZW50YVxuICAgICAgICogYWwgY29udGFkb3JcbiAgICAgICAqL1xuICAgICAgY2FzZSBLRVlfRE9XTjpcbiAgICAgICAgLy8gc2kgaWdub3JlIGVzdGEgY29tbyB0cnVlIGNvcnRhIGxhIGVqZWN1Y2lvblxuICAgICAgICBpZiAoaWdub3JlTmV4dCB8fCBtb2RlID09PSBIT1JJWk9OVEFMIHx8IGRpc2FibGVkKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgbmV4dFNlbGVjdG9yID0gcHJlc3NEb3duQXJyb3coY291bnRlciwgZGF0YU1heClcbiAgICAgICAgc2V0Q291bnRlcihuZXh0U2VsZWN0b3IpXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSBLRVlfVVA6XG4gICAgICAgIGlmIChtb2RlID09PSBIT1JJWk9OVEFMKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgbmV4dFNlbGVjdG9yID0gcHJlc3NVcEFycm93KGNvdW50ZXIsIGRhdGFNYXgpXG4gICAgICAgIHNldENvdW50ZXIobmV4dFNlbGVjdG9yKVxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgS0VZX1JJR0hUOlxuICAgICAgICAvLyBzaSBpZ25vcmUgZXN0YSBjb21vIHRydWUgY29ydGEgbGEgZWplY3VjaW9uXG4gICAgICAgIGlmIChpZ25vcmVOZXh0IHx8IG1vZGUgPT09IFZFUlRJQ0FMIHx8IGRpc2FibGVkKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgbmV4dFNlbGVjdG9yID0gcHJlc3NEb3duQXJyb3coY291bnRlciwgZGF0YU1heClcbiAgICAgICAgc2V0Q291bnRlcihuZXh0U2VsZWN0b3IpXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSBLRVlfTEVGVDpcbiAgICAgICAgaWYgKG1vZGUgPT09IFZFUlRJQ0FMIHx8IGRpc2FibGVkKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgbmV4dFNlbGVjdG9yID0gcHJlc3NVcEFycm93KGNvdW50ZXIsIGRhdGFNYXgpXG4gICAgICAgIHNldENvdW50ZXIobmV4dFNlbGVjdG9yKVxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgYnJlYWtcbiAgICAgIC8qKlxuICAgICAgICogYWwgY29uZmlybWFyIGFjY2lvbmEgbGEgZnVuY2lvbiBxdWUgbGxlZ8OzIGVuIGxvcyBwYXLDoW1ldHJvc1xuICAgICAgICovXG4gICAgICBjYXNlIEtFWV9FTlRFUjpcbiAgICAgICAgb25Db25maXJtKGNvdW50ZXIpXG4gICAgICAgIHJlc2V0Q291bnRlciA/IHNldEluaXRpYWxDb3VudGVyKCkgOiBudWxsXG4gICAgICAgIGJyZWFrXG4gICAgICAvKipcbiAgICAgICAqIFNpIGVsIHVzdWFyaW8gcHJlc2lvbmEgdW5hIGRlIGVzdGFzIHRlY2xhcyBzZSBjZXJyYXLDoSBsYSBsaXN0YVxuICAgICAgICovXG4gICAgICBjYXNlIEtFWV9UQUI6XG4gICAgICBjYXNlIEtFWV9FU0NBUEU6XG4gICAgICBjYXNlIEtFWV9TSElGVCAmJiBLRVlfVEFCOlxuICAgICAgICBvbkV4aXQoKVxuICAgICAgICByZXNldENvdW50ZXIgPyBzZXRJbml0aWFsQ291bnRlcigpIDogbnVsbFxuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRXNjdWNobyBsYXMgdGVjbGFzIHByZXNpb25hZGFzXG4gICAqL1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBkb3duSGFuZGxlcilcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGRvd25IYW5kbGVyKVxuICAgIH1cbiAgfSwgW29uQ29uZmlybSwgb25FeGl0LCBjb3VudGVyLCBzZXRDb3VudGVyLCBpZ25vcmVOZXh0LCBkYXRhTWF4XSlcblxuICAvKipcbiAgICogRWwgaG9vayBkZXZ1ZWx2ZSBlbCBjb250YWRvciBhY3R1YWxpemFkbyBwYXNvIGEgcGFzbywgcGFyYSBwb2RlclxuICAgKiBkYXIgdW5hIHJlc3B1ZXN0YSB2aXN1YWwgYWwgdXN1YXJpb1xuICAgKi9cbiAgcmV0dXJuIGNvdW50ZXJcbn1cbiJdLCJtYXBwaW5ncyI6InlZQU1NQSxRQUFRLENBQUcsVUFBVSxDQUNyQkMsVUFBVSxDQUFHLFlBQVksQ0F3QmxCQyxlQUFlLENBQUcsV0FRSyxDQTRCbEMsUUFBU0MsRUFBVyxDQUFDQyxDQUFDLENBQUUsQ0FFdEIsR0FBSUMsRUFBWSxDQUVoQixPQUFRRCxDQUFDLENBQUNFLE9BQU8sRUFNZixJQUFLQyxvQkFBUSxDQUVYLEdBQUlDLENBQVUsRUFBSUMsQ0FBSSxHQUFLUixVQUFVLEVBQUlTLENBQVEsQ0FDL0MsT0FFRkwsQ0FBWSxDQUFHLEdBQUFNLDBCQUFjLEVBQUNDLENBQU8sQ0FBRUMsQ0FBTyxDQUFDLENBQy9DQyxDQUFVLENBQUNULENBQVksQ0FBQyxDQUN4QkQsQ0FBQyxDQUFD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