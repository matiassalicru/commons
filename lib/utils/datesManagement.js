"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.warnConcatenated=exports.verifyDeadlineAndUpdate=exports.verifyDatetimeAndUpdate=exports.specialFormat=exports.formatFewDays=exports.OPTION_ORIGINAL=exports.OPTION_DELETE_SON_LINK=exports.OPTION_DELETE_FATHER_LINK=exports.OPTION_CHANGE_DATE=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_moment=_interopRequireDefault(require("moment"));function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var FORMAT_DATE="D MMM, HH:mm",FORMAT_DATE_YEAR="D MMM YYYY, HH:mm",STANDARD_FORMAT="YYYY-MM-DD HH:mm:ss",OPTION_ORIGINAL="original";exports.OPTION_ORIGINAL=OPTION_ORIGINAL;var OPTION_CHANGE_DATE="change_date";exports.OPTION_CHANGE_DATE="change_date";var OPTION_DELETE_SON_LINK="delete_son_link";exports.OPTION_DELETE_SON_LINK="delete_son_link";var OPTION_DELETE_FATHER_LINK="delete_father_link";exports.OPTION_DELETE_FATHER_LINK="delete_father_link";var specialFormat=function(a){var b=(0,_moment.default)().year()===(0,_moment.default)(a).year();return b?FORMAT_DATE:FORMAT_DATE_YEAR};exports.specialFormat=specialFormat;var formatFewDays=function(a,b){var c=(0,_moment.default)(a).format("YYYY-MM-DD"),d=(0,_moment.default)().format("YYYY-MM-DD"),e=(0,_moment.default)(c).diff(d,"days");return e?1===e?"[".concat(b.tomorrow,"]"):1<e&&8>e?"[".concat(b.moreDays,"]"):specialFormat(a):"[".concat(b.today,",] HH:mm")};exports.formatFewDays=formatFewDays;function defaultLinkOption(a,b,c,d){return{change_type:"date",option:OPTION_CHANGE_DATE,data:{date_diff:(0,_moment.default)(a).diff(b,"days"),deadline_diff:(0,_moment.default)(c).diff(d,"days")}}}var warnConcatenated=function(a,b,c,d,e,f){if(null!==a&&void 0!==a&&a.source.length){if(!a.target.length&&d!==e)return{showModal:!1,linkOption:{option:OPTION_ORIGINAL}};if(b!==c){var k=a.source.some(function(a){return(0,_moment.default)(b).isSameOrBefore(a.deadline)});if(k){var g=a.source.reduce(function(a,b){return(0,_moment.default)(a.deadline).isSameOrAfter(b.deadline)?a:b}),h=(0,_moment.default)(d).diff(b,"days"),i=(0,_moment.default)(g.deadline).add(1,"days").startOf("day").format("YYYY-MM-DD HH:mm:ss"),j=(0,_moment.default)(i).add(h,"days").endOf("day").format("YYYY-MM-DD HH:mm:ss");return{showModal:!0,deleteOption:{datetime:b,deadline:d,linkOption:_objectSpread(_objectSpread({},defaultLinkOption(b,c,d,e)),{},{filterByDate:b,filterByDeadline:d,filterByProject:f,option:OPTION_DELETE_FATHER_LINK})},changeDate:{datetime:i,deadline:j,linkOption:_objectSpread(_objectSpread({},defaultLinkOption(i,c,j,e)),{},{filterByDate:b,filterByDeadline:d,filterByProject:f})}}}}return{showModal:!1,linkOption:defaultLinkOption(b,c,d,e)}}return null!==a&&void 0!==a&&a.target.length?{showModal:!1,linkOption:defaultLinkOption(b,c,d,e)}:{showModal:!1}};exports.warnConcatenated=warnConcatenated;var verifyDatetimeAndUpdate=function(a){var b=a.start,c=a.deadline,d=a.projectId,e=a.estimated,f=a.dateChanged,g=a.concatenatedData,h=a.callbackUpdate,i=null===f||void 0===f?void 0:f.format(STANDARD_FORMAT),j=c;if(null!==f&&void 0!==f&&f.isSameOrAfter(c)){var l=f.clone();j=l.add(e,"minutes").format(STANDARD_FORMAT)}var k=warnConcatenated(g,i,b,j,c,d);h(i,j,k)};exports.verifyDatetimeAndUpdate=verifyDatetimeAndUpdate;var verifyDeadlineAndUpdate=function(a){var b=a.start,c=a.deadline,d=a.estimated,e=a.projectId,f=a.dateChanged,g=a.permissionDelete,h=a.concatenatedData,i=a.callbackUpdate;if(f||g){var j=(null===f||void 0===f?void 0:f.format(STANDARD_FORMAT))||null,k=b;if(null!==f&&void 0!==f&&f.isSameOrBefore(b)){var m=f.clone();k=m.subtract(d,"minutes").format(STANDARD_FORMAT)}var l=warnConcatenated(h,k,b,j,c,e);i(k,j,l)}};exports.verifyDeadlineAndUpdate=verifyDeadlineAndUpdate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,